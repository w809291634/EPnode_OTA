///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.10.1.2146 for 8051               07/Jul/2023  16:40:37
// Copyright 2004-2014 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\device_find.c
//    Command line       =  
//        -f "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DRTR_NWK) -f "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=8448
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
//        -DREJOIN_POLL_RATE=440 "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\device_find.c"
//        -D HOLD_AUTO_START -D BUILD_ALL_DEVICES -D REFLECTOR -D NV_INIT -D
//        XLAB -D CC2530_Serial -D MAKE_CRC_SHDW -D CC2530_USE_IAP -lC
//        "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\"
//        -lA "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\"
//        --diag_suppress Pe001,Pa010 -o "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\Obj\"
//        -e --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
//        --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 8 -I
//        "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\Source\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\common\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\osal\mcu\ccsoc\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -On
//    List file          =  
//        I:\1_git_code\EPnode_OTA\CC2530
//        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\device_find.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME device_find

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8

        PUBLIC ??_zb_ReceiveDataIndication?relay
        FUNCTION ??_zb_ReceiveDataIndication?relay,0203H
        PUBLIC ??my_FindDevice?relay
        FUNCTION ??my_FindDevice?relay,0203H
        FUNCTION ??my_FindDeviceProc?relay,0203H
        PUBLIC ??my_SendDataRequest?relay
        FUNCTION ??my_SendDataRequest?relay,0203H
        PUBLIC _zb_ReceiveDataIndication
        FUNCTION _zb_ReceiveDataIndication,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC my_FindDevice
        FUNCTION my_FindDevice,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        FUNCTION my_FindDeviceProc,0a1203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 34, STACK
        PUBLIC my_SendDataRequest
        FUNCTION my_SendDataRequest,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 38, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
AF_DataRequest      SYMBOL "AF_DataRequest"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
??NLME_GetShortAddr?relay SYMBOL "?relay", NLME_GetShortAddr
SAPI_SendCback      SYMBOL "SAPI_SendCback"
??SAPI_SendCback?relay SYMBOL "?relay", SAPI_SendCback
ZMacGetReq          SYMBOL "ZMacGetReq"
??ZMacGetReq?relay  SYMBOL "?relay", ZMacGetReq
osal_memcmp         SYMBOL "osal_memcmp"
??osal_memcmp?relay SYMBOL "?relay", osal_memcmp
osal_memcpy         SYMBOL "osal_memcpy"
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
zb_FindDeviceConfirm SYMBOL "zb_FindDeviceConfirm"
??zb_FindDeviceConfirm?relay SYMBOL "?relay", zb_FindDeviceConfirm
zb_ReceiveDataIndication SYMBOL "zb_ReceiveDataIndication"
??zb_ReceiveDataIndication?relay SYMBOL "?relay", zb_ReceiveDataIndication
zb_SendDataRequest  SYMBOL "zb_SendDataRequest"
??zb_SendDataRequest?relay SYMBOL "?relay", zb_SendDataRequest
_zb_ReceiveDataIndication SYMBOL "_zb_ReceiveDataIndication"
??_zb_ReceiveDataIndication?relay SYMBOL "?relay", _zb_ReceiveDataIndication
my_FindDevice       SYMBOL "my_FindDevice"
??my_FindDevice?relay SYMBOL "?relay", my_FindDevice
my_SendDataRequest  SYMBOL "my_SendDataRequest"
??my_SendDataRequest?relay SYMBOL "?relay", my_SendDataRequest

        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??NLME_GetShortAddr?relay
        FUNCTION ??NLME_GetShortAddr?relay,00H
        EXTERN ??SAPI_SendCback?relay
        FUNCTION ??SAPI_SendCback?relay,00H
        EXTERN ??ZMacGetReq?relay
        FUNCTION ??ZMacGetReq?relay,00H
        EXTERN ??osal_memcmp?relay
        FUNCTION ??osal_memcmp?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??zb_FindDeviceConfirm?relay
        FUNCTION ??zb_FindDeviceConfirm?relay,00H
        EXTERN ??zb_ReceiveDataIndication?relay
        FUNCTION ??zb_ReceiveDataIndication?relay,00H
        EXTERN ??zb_SendDataRequest?relay
        FUNCTION ??zb_SendDataRequest?relay,00H
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN SAPI_SendCback
        FUNCTION SAPI_SendCback,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacGetReq
        FUNCTION ZMacGetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcmp
        FUNCTION osal_memcmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sapi_epDesc
        EXTERN zb_FindDeviceConfirm
        FUNCTION zb_FindDeviceConfirm,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zb_ReceiveDataIndication
        FUNCTION zb_ReceiveDataIndication,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zb_SendDataRequest
        FUNCTION zb_SendDataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// I:\1_git_code\EPnode_OTA\CC2530 IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\device_find.c
//    1 /*********************************************************************************************
//    2 * 文件：zxbee.c
//    3 * 作者：Xuzhy 2018.5.16
//    4 * 说明：节点长短地址转换
//    5 * 修改：
//    6 * 注释：
//    7 *********************************************************************************************/
//    8 
//    9 /*********************************************************************************************
//   10 * 头文件
//   11 *********************************************************************************************/
//   12 #include "ZComDef.h"
//   13 #include "OSAL.h"
//   14 #include "sapi.h"
//   15 #include "hal_key.h"
//   16 #include "hal_led.h"
//   17 #include "DebugTrace.h"
//   18 #include "SimpleApp.h"
//   19 #include "osal_nv.h"
//   20 #include "NLMEDE.h"
//   21 #include "AF.h"
//   22 #include "OnBoard.h"
//   23 #include "nwk_util.h"
//   24 #include "ZDProfile.h"
//   25 #include "ZDObject.h"
//   26 #include "hal_led.h"
//   27 #include "hal_key.h"
//   28 #include "sapi.h"
//   29 #include "MT_SAPI.h"
//   30 
//   31 #if defined( MT_TASK )
//   32   #include "osal_nv.h"
//   33 #endif
//   34 #include "mt_app.h"
//   35 #include "mt_uart.h"
//   36 #include "mt.h"
//   37 /*********************************************************************************************
//   38 * 宏定义
//   39 *********************************************************************************************/
//   40 #define my_FindDeviceConfirm zb_FindDeviceConfirm
//   41 #define SAPICB_DATA_CNF   0xE0
//   42 /*********************************************************************************************
//   43 * 函数原型说明
//   44 *********************************************************************************************/
//   45 void my_FindDevice(uint8 searchType, uint8 *searchKey);
//   46 void my_FindDeviceConfirm( uint8 searchType, uint8 *searchKey, uint8 *result );
//   47 void SAPI_SendCback( uint8 event, uint8 status, uint16 data );
//   48 static int my_FindDeviceProc( uint16 source, uint16 command, uint16 len, uint8 *pData);
//   49 void my_SendDataRequest ( uint8* destination, uint16 commandId, uint8 len,
//   50                           uint8 *pData, uint8 handle, uint8 txOptions, uint8 radius );  
//   51 extern void _zb_ReceiveDataIndication( uint16 source, uint16 command, uint16 len, uint8 *pData  );
//   52 /*********************************************************************************************
//   53 * 名称：my_SendDataRequest()
//   54 * 功能：长地址发送函数
//   55 * 参数：
//   56 * 返回：
//   57 * 修改：
//   58 * 注释：
//   59 *********************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   60 void my_SendDataRequest ( uint8* destination, uint16 commandId, uint8 len,
my_SendDataRequest:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function my_SendDataRequest
        CODE
//   61                           uint8 *pData, uint8 handle, uint8 txOptions, uint8 radius )
//   62 {
        FUNCALL my_SendDataRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_SendDataRequest, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_SendDataRequest, SAPI_SendCback
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 14
        MOV     A,#-0xe
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     ?V6,R1
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V4,A
        MOV     A,#0x21
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V5,A
//   63   afStatus_t status;
//   64   afAddrType_t dstAddr;
//   65 
//   66   txOptions |= AF_DISCV_ROUTE;
        SETB    C
        MOV     A,?V4
        MOV     0xE0 /* A   */.5,C
        MOV     ?V4,A
//   67 
//   68   osal_memcpy(dstAddr.addr.extAddr, destination, Z_EXTADDR_LEN);
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        MOV     ?V2,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//   69 
//   70   dstAddr.addrMode = afAddr64Bit;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
//   71   dstAddr.panId = 0;                                    // Not an inter-pan message.
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x0
        MOVX    @DPTR,A
//   72   dstAddr.endPoint = sapi_epDesc.simpleDesc->EndPoint;  // Set the endpoint.
        MOV     DPTR,#sapi_epDesc + 3
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//   73 
//   74   // Send the message
//   75   status = AF_DataRequest(&dstAddr, &sapi_epDesc, commandId, len,
//   76                           pData, &handle, txOptions, radius);
        ; Setup parameters for call to function AF_DataRequest
        MOV     A,?V5
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0,?V6
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     ?V0,R6
        MOV     ?V1,R7
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     R1,?V4
        MOV     R4,#sapi_epDesc & 0xff
        MOV     R5,#(sapi_epDesc >> 8) & 0xff
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??AF_DataRequest?relay; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        MOV     ?V3,A
//   77 
//   78   if (status != afStatus_SUCCESS)
        MOV     A,?V3
        JZ      ??my_SendDataRequest_0
//   79   {
//   80     SAPI_SendCback( SAPICB_DATA_CNF, status, handle );
        ; Setup parameters for call to function SAPI_SendCback
        MOV     A,#0x1f
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     R2,?V3
        MOV     R1,#-0x20
        LCALL   ??SAPI_SendCback?relay; Banked call to: SAPI_SendCback
//   81   }
//   82 }
??my_SendDataRequest_0:
        MOV     A,#0xe
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock0
//   83 /*********************************************************************************************
//   84 * 名称：my_FindDevice()
//   85 * 功能：发送设备地址查找请求
//   86 * 参数：searchType: 查找地址类型
//   87 *       searchKey：请求地址
//   88 * 返回：
//   89 * 修改：
//   90 * 注释：
//   91 *********************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   92 void my_FindDevice(uint8 searchType, uint8 *searchKey)
my_FindDevice:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function my_FindDevice
        CODE
//   93 {
        FUNCALL my_FindDevice, zb_SendDataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_FindDevice, zb_SendDataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V1,R1
        MOV     ?V6,R2
        MOV     ?V7,R3
//   94   uint16 dAddr;
//   95   uint16 cmd;
//   96   uint8 dlen;
//   97   if (ZB_IEEE_SEARCH == searchType)  {
        MOV     A,#0x1
        XRL     A,?V1
        JNZ     ??my_FindDevice_0
//   98     dAddr = 0xffff;
        MOV     ?V2,#-0x1
        MOV     ?V3,#-0x1
//   99     cmd = 0xff01;
        MOV     R6,#0x1
        MOV     R7,#-0x1
//  100     dlen = 8;
        MOV     ?V0,#0x8
//  101     //my_SendDataRequest(searchKey, cmd, dlen, searchKey , 0, 0, AF_DEFAULT_RADIUS );
//  102     zb_SendDataRequest(dAddr, cmd, dlen, searchKey , 0, AF_ACK_REQUEST, AF_DEFAULT_RADIUS );
        ; Setup parameters for call to function zb_SendDataRequest
        MOV     ?V4,#0x1e
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V4,#0x10
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V4,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     ?V4,?V6
        MOV     ?V5,?V7
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,?V0
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V2
        MOV     R3,?V3
        LCALL   ??zb_SendDataRequest?relay; Banked call to: zb_SendDataRequest
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
//  103   }
//  104   if (ZB_NWKA_SEARCH == searchType) {
??my_FindDevice_0:
        MOV     A,#0x2
        XRL     A,?V1
        JNZ     ??my_FindDevice_1
//  105     dAddr = searchKey[0]<<8 | searchKey[1];
        MOV     DPL,?V6
        MOV     DPH,?V7
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     R1,#0x0
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     DPL,?V6
        MOV     DPH,?V7
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     R3,#0x0
        MOV     A,R0
        ORL     A,R2
        MOV     R0,A
        MOV     A,R1
        ORL     A,R3
        MOV     R1,A
        MOV     ?V2,R0
        MOV     ?V3,R1
//  106     cmd = 0xff02;
        MOV     R6,#0x2
        MOV     R7,#-0x1
//  107     dlen = 2;
        MOV     ?V0,#0x2
//  108     zb_SendDataRequest(dAddr, cmd, dlen,searchKey , 0, AF_ACK_REQUEST, AF_DEFAULT_RADIUS );
        ; Setup parameters for call to function zb_SendDataRequest
        MOV     ?V4,#0x1e
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V4,#0x10
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V4,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     ?V4,?V6
        MOV     ?V5,?V7
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,?V0
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V2
        MOV     R3,?V3
        LCALL   ??zb_SendDataRequest?relay; Banked call to: zb_SendDataRequest
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
//  109   }
//  110  
//  111 }
??my_FindDevice_1:
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1
//  112 /*********************************************************************************************
//  113 * 名称：my_FindDeviceProc()
//  114 * 功能：地址查找处理
//  115 * 参数：
//  116 * 返回：
//  117 * 修改：
//  118 * 注释：
//  119 *********************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  120 static int my_FindDeviceProc( uint16 source, uint16 command, uint16 len, uint8 *pData) 
my_FindDeviceProc:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function my_FindDeviceProc
        CODE
//  121 {
        FUNCALL my_FindDeviceProc, ZMacGetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_FindDeviceProc, osal_memcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_FindDeviceProc, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_FindDeviceProc, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_FindDeviceProc, zb_SendDataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_FindDeviceProc, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_FindDeviceProc, ZMacGetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_FindDeviceProc, zb_SendDataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_FindDeviceProc, zb_FindDeviceConfirm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL my_FindDeviceProc, zb_FindDeviceConfirm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 14
        MOV     A,#-0xe
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V3,A
        MOV     A,#0x1f
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
//  122   uint8 dat[10];
//  123   
//  124   if (command == 0xff01) {
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??my_FindDeviceProc_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xff
??my_FindDeviceProc_0:
        JZ      $+5
        LJMP    ??my_FindDeviceProc_1 & 0xFFFF
//  125     uint8 *pExtAddr = dat;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R6,?V4
        MOV     R7,?V5
//  126     ZMacGetReq( ZMacExtAddr, pExtAddr );
        ; Setup parameters for call to function ZMacGetReq
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     R1,#-0x1e
        LCALL   ??ZMacGetReq?relay   ; Banked call to: ZMacGetReq
        MOV     A,R1
//  127     if (len == Z_EXTADDR_LEN && TRUE == osal_memcmp(pData, pExtAddr, Z_EXTADDR_LEN)) {    
        MOV     A,#0x8
        XRL     A,?V2
        JNZ     ??my_FindDeviceProc_2
        MOV     A,#0x0
        XRL     A,?V3
??my_FindDeviceProc_2:
        JZ      $+5
        LJMP    ??my_FindDeviceProc_3 & 0xFFFF
        ; Setup parameters for call to function osal_memcmp
        MOV     ?V4,R6
        MOV     ?V5,R7
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     R3,#0x0
        LCALL   ??osal_memcmp?relay  ; Banked call to: osal_memcmp
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        XRL     A,#0x1
        JNZ     ??my_FindDeviceProc_3
//  128       dat[8] = NLME_GetShortAddr();
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay; Banked call to: NLME_GetShortAddr
        MOV     A,R2
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  129       dat[9] = NLME_GetShortAddr() >> 8;
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay; Banked call to: NLME_GetShortAddr
        CLR     A
        XCH     A,R3
        MOV     R2,A
        MOV     A,R2
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  130       zb_SendDataRequest(source, 0xfe01, 10, dat, 0, AF_ACK_REQUEST, AF_DEFAULT_RADIUS);
        ; Setup parameters for call to function zb_SendDataRequest
        MOV     ?V4,#0x1e
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V4,#0x10
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V4,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     R1,#0xa
        MOV     R4,#0x1
        MOV     R5,#-0x2
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??zb_SendDataRequest?relay; Banked call to: zb_SendDataRequest
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  131     }
//  132     return 1;
??my_FindDeviceProc_3:
        MOV     R2,#0x1
        MOV     R3,#0x0
        LJMP    ??my_FindDeviceProc_4 & 0xFFFF
//  133   }
//  134   if (command == 0xff02) {
??my_FindDeviceProc_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,#0x2
        JNZ     ??my_FindDeviceProc_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xff
??my_FindDeviceProc_5:
        JZ      $+5
        LJMP    ??my_FindDeviceProc_6 & 0xFFFF
//  135     uint16 sa = NLME_GetShortAddr();
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay; Banked call to: NLME_GetShortAddr
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R6,?V4
        MOV     R7,?V5
//  136     if (len == 2 && (pData[0]<<8 | pData[1]) == sa) {
        MOV     A,#0x2
        XRL     A,?V2
        JNZ     ??my_FindDeviceProc_7
        MOV     A,#0x0
        XRL     A,?V3
??my_FindDeviceProc_7:
        JZ      $+5
        LJMP    ??my_FindDeviceProc_8 & 0xFFFF
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     R1,#0x0
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     R3,#0x0
        MOV     A,R0
        ORL     A,R2
        MOV     R0,A
        MOV     A,R1
        ORL     A,R3
        MOV     R1,A
        MOV     A,R6
        XRL     A,R0
        JNZ     ??my_FindDeviceProc_9
        MOV     A,R7
        XRL     A,R1
??my_FindDeviceProc_9:
        JNZ     ??my_FindDeviceProc_8
//  137       dat[0] = sa;
        MOV     A,R6
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  138       dat[1] = sa>>8;
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        MOV     R1,A
        CLR     A
        XCH     A,R1
        MOV     R0,A
        MOV     A,R0
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  139       ZMacGetReq( ZMacExtAddr, &dat[2] );
        ; Setup parameters for call to function ZMacGetReq
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,#-0x1e
        LCALL   ??ZMacGetReq?relay   ; Banked call to: ZMacGetReq
        MOV     A,R1
//  140       zb_SendDataRequest(source, 0xfe02, 10, dat, 0, AF_ACK_REQUEST, AF_DEFAULT_RADIUS);
        ; Setup parameters for call to function zb_SendDataRequest
        MOV     ?V4,#0x1e
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V4,#0x10
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V4,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV     R1,#0xa
        MOV     R4,#0x2
        MOV     R5,#-0x2
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??zb_SendDataRequest?relay; Banked call to: zb_SendDataRequest
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  141     }
//  142     return 1;
??my_FindDeviceProc_8:
        MOV     R2,#0x1
        MOV     R3,#0x0
        SJMP    ??my_FindDeviceProc_4
//  143   }
//  144   if (command == 0xfe01) {
??my_FindDeviceProc_6:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??my_FindDeviceProc_10
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xfe
??my_FindDeviceProc_10:
        JNZ     ??my_FindDeviceProc_11
//  145     if (len == 10) {
        MOV     A,#0xa
        XRL     A,?V2
        JNZ     ??my_FindDeviceProc_12
        MOV     A,#0x0
        XRL     A,?V3
??my_FindDeviceProc_12:
        JNZ     ??my_FindDeviceProc_13
//  146       my_FindDeviceConfirm(ZB_IEEE_SEARCH, pData, (unsigned char *)&pData[8]);
        ; Setup parameters for call to function zb_FindDeviceConfirm
        MOV     A,?V0
        ADD     A,#0x8
        MOV     R4,A
        CLR     A
        ADDC    A,?V1
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     R1,#0x1
        LCALL   ??zb_FindDeviceConfirm?relay; Banked call to: zb_FindDeviceConfirm
//  147     }
//  148     return 1;
??my_FindDeviceProc_13:
        MOV     R2,#0x1
        MOV     R3,#0x0
        SJMP    ??my_FindDeviceProc_4
//  149   }
//  150   if (command == 0xfe02) {
??my_FindDeviceProc_11:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,#0x2
        JNZ     ??my_FindDeviceProc_14
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xfe
??my_FindDeviceProc_14:
        JNZ     ??my_FindDeviceProc_15
//  151     if (len == 10) {
        MOV     A,#0xa
        XRL     A,?V2
        JNZ     ??my_FindDeviceProc_16
        MOV     A,#0x0
        XRL     A,?V3
??my_FindDeviceProc_16:
        JNZ     ??my_FindDeviceProc_17
//  152       my_FindDeviceConfirm(ZB_NWKA_SEARCH, pData, (unsigned char *)&pData[2]);
        ; Setup parameters for call to function zb_FindDeviceConfirm
        MOV     A,?V0
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V1
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        MOV     R1,#0x2
        LCALL   ??zb_FindDeviceConfirm?relay; Banked call to: zb_FindDeviceConfirm
//  153     }
//  154     return 1;
??my_FindDeviceProc_17:
        MOV     R2,#0x1
        MOV     R3,#0x0
        SJMP    ??my_FindDeviceProc_4
//  155   }
//  156   return 0;
??my_FindDeviceProc_15:
        MOV     R2,#0x0
        MOV     R3,#0x0
??my_FindDeviceProc_4:
        MOV     A,#0xe
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock2
//  157 }
//  158 /*********************************************************************************************
//  159 * 名称：_zb_ReceiveDataIndication()
//  160 * 功能：接收数据处理
//  161 * 参数：
//  162 * 返回：
//  163 * 修改：
//  164 * 注释：
//  165 *********************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  166 void _zb_ReceiveDataIndication( uint16 source, uint16 command, uint16 len, uint8 *pData  )
_zb_ReceiveDataIndication:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function _zb_ReceiveDataIndication
        CODE
//  167 {
        FUNCALL _zb_ReceiveDataIndication, my_FindDeviceProc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL _zb_ReceiveDataIndication, zb_ReceiveDataIndication
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     ?V0,R4
        MOV     ?V1,R5
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V7,A
//  168   if (my_FindDeviceProc(source, command, len, pData) != 0) return;
        ; Setup parameters for call to function my_FindDeviceProc
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V4,R6
        MOV     ?V5,R7
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     R2,?V2
        MOV     R3,?V3
        LCALL   ??my_FindDeviceProc?relay; Banked call to: my_FindDeviceProc
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     A,?V4
        ORL     A,?V5
        JNZ     ??_zb_ReceiveDataIndication_0
//  169   zb_ReceiveDataIndication(source, command, len, pData);
        ; Setup parameters for call to function zb_ReceiveDataIndication
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V4,R6
        MOV     ?V5,R7
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     R2,?V2
        MOV     R3,?V3
        LCALL   ??zb_ReceiveDataIndication?relay; Banked call to: zb_ReceiveDataIndication
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
//  170 }
??_zb_ReceiveDataIndication_0:
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock3

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??my_SendDataRequest?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    my_SendDataRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??my_FindDevice?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    my_FindDevice

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??my_FindDeviceProc?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    my_FindDeviceProc

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??_zb_ReceiveDataIndication?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    _zb_ReceiveDataIndication

        END
// 
// 1 101 bytes in segment BANKED_CODE
//    24 bytes in segment BANK_RELAYS
// 
// 1 125 bytes of CODE memory
//
//Errors: none
//Warnings: none
