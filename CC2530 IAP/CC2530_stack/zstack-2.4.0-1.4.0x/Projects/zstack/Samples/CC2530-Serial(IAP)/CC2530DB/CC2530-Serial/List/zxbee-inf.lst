###############################################################################
#
# IAR C/C++ Compiler V9.10.1.2146 for 8051                07/Jul/2023  16:40:47
# Copyright 2004-2014 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\zxbee-inf.c
#    Command line       =  
#        -f "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DRTR_NWK) -f "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=8448
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
#        -DREJOIN_POLL_RATE=440 "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\zxbee-inf.c"
#        -D HOLD_AUTO_START -D BUILD_ALL_DEVICES -D REFLECTOR -D NV_INIT -D
#        XLAB -D CC2530_Serial -D MAKE_CRC_SHDW -D CC2530_USE_IAP -lC
#        "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\"
#        -lA "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\"
#        --diag_suppress Pe001,Pa010 -o "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\Obj\"
#        -e --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 8 -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\Source\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\common\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\osal\mcu\ccsoc\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -On
#    List file          =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\zxbee-inf.lst
#    Object file        =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\Obj\zxbee-inf.r51
#
###############################################################################

I:\1_git_code\EPnode_OTA\CC2530 IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\zxbee-inf.c
      1          /*********************************************************************************************
      2          * 文件：zxbee-inf.c
      3          * 作者：Xuzhy 2018.5.16
      4          * 说明：ZXBee通信协议数据包收发
      5          * 修改：
      6          * 注释：
      7          *********************************************************************************************/
      8          
      9          /*********************************************************************************************
     10          * 头文件
     11          *********************************************************************************************/
     12          #include<string.h>
     13          #include "hal_types.h"
     14          #include "AppCommon.h"
     15          #include "hal_led.h"
     16          #include "ZDApp.h"
     17          #include "zxbee.h"
     18          #include "sapi.h"
     19          #include "stdio.h"
     20          #include "zxbee-inf.h"
     21          /*********************************************************************************************
     22          * 宏定义
     23          *********************************************************************************************/
     24          #define DEBUG 0
     25          #if DEBUG
     26          #define Debug   printf
     27          #else
     28          #define Debug(...)
     29          #endif
     30          /*********************************************************************************************
     31          * 名称：ZXBeeInfInit()
     32          * 功能：ZXBee接口初始化
     33          * 参数：
     34          * 返回：
     35          * 修改：
     36          * 注释：
     37          *********************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     38          void ZXBeeInfInit(void)
   \                     ZXBeeInfInit:
     39          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     40          
     41          }
   \   000000   02....       LJMP    ?BRET
     42          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     43          void ZXBeeSendConfirm(uint8 h, uint8 st)
   \                     ZXBeeSendConfirm:
     44          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   EA           MOV     A,R2
   \   000008   FF           MOV     R7,A
     45            uint8 GetLinkStatus(void);
     46            static int8 txError = 0;
     47            if (h == 0xaa){
   \   000009   74AA         MOV     A,#-0x56
   \   00000B   6E           XRL     A,R6
   \   00000C   7029         JNZ     ??ZXBeeSendConfirm_0
     48              if (GetLinkStatus()) {
   \   00000E                ; Setup parameters for call to function GetLinkStatus
   \   00000E   12....       LCALL   ??GetLinkStatus?relay; Banked call to: GetLinkStatus
   \   000011   E9           MOV     A,R1
   \   000012   6023         JZ      ??ZXBeeSendConfirm_0
     49                if (st == 0) {
   \   000014   EF           MOV     A,R7
   \   000015   7008         JNZ     ??ZXBeeSendConfirm_1
     50                  txError = 0;
   \   000017   90....       MOV     DPTR,#??txError
   \   00001A   7400         MOV     A,#0x0
   \   00001C   F0           MOVX    @DPTR,A
   \   00001D   8007         SJMP    ??ZXBeeSendConfirm_2
     51                } else  txError += 1;
   \                     ??ZXBeeSendConfirm_1:
   \   00001F   90....       MOV     DPTR,#??txError
   \   000022   E0           MOVX    A,@DPTR
   \   000023   2401         ADD     A,#0x1
   \   000025   F0           MOVX    @DPTR,A
     52                
     53                if (txError >= 5) {
   \                     ??ZXBeeSendConfirm_2:
   \   000026   90....       MOV     DPTR,#??txError
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   C3           CLR     C
   \   00002B   9405         SUBB    A,#0x5
   \   00002D   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00002F   65D0         XRL     A,PSW
   \   000031   33           RLC     A
   \   000032   4003         JC      ??ZXBeeSendConfirm_0
     54                  void myReset(void);
     55                  //zb_SystemReset();
     56                  myReset();
   \   000034                ; Setup parameters for call to function myReset
   \   000034   12....       LCALL   ??myReset?relay      ; Banked call to: myReset
     57                }
     58              }
     59            }
     60          }
   \                     ??ZXBeeSendConfirm_0:
   \   000037   7F01         MOV     R7,#0x1
   \   000039   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??txError:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     61          /*********************************************************************************************
     62          * 名称：ZXBeeInfSend()
     63          * 功能：节点发送无线数据包给汇集节点
     64          * 参数：*p -- 要发送的无线数据包
     65          * 返回：
     66          * 修改：
     67          * 注释：
     68          *********************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     69          void ZXBeeInfSend(char *p, int len)
   \                     ZXBeeInfSend:
     70          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0,R2
   \   000007   8B..         MOV     ?V1,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
     71              HalLedSet( HAL_LED_1, HAL_LED_MODE_OFF );
   \   00000D                ; Setup parameters for call to function HalLedSet
   \   00000D   7A00         MOV     R2,#0x0
   \   00000F   7901         MOV     R1,#0x1
   \   000011   12....       LCALL   ??HalLedSet?relay    ; Banked call to: HalLedSet
   \   000014   E9           MOV     A,R1
     72              HalLedSet( HAL_LED_1, HAL_LED_MODE_BLINK );
   \   000015                ; Setup parameters for call to function HalLedSet
   \   000015   7A02         MOV     R2,#0x2
   \   000017   7901         MOV     R1,#0x1
   \   000019   12....       LCALL   ??HalLedSet?relay    ; Banked call to: HalLedSet
   \   00001C   E9           MOV     A,R1
     73          #if DEBUG
     74              Debug("Debug send:");
     75              for (int i=0; i<len; i++) {
     76                Debug("%c", p[i]);
     77              }
     78              Debug("\r\n");
     79          #endif
     80              zb_SendDataRequest( 0, 0, len, (uint8*)p, 0xaa, AF_ACK_REQUEST, AF_DEFAULT_RADIUS );
   \   00001D                ; Setup parameters for call to function zb_SendDataRequest
   \   00001D   75..1E       MOV     ?V2,#0x1e
   \   000020   78..         MOV     R0,#?V2
   \   000022   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000025   75..10       MOV     ?V2,#0x10
   \   000028   78..         MOV     R0,#?V2
   \   00002A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002D   75..AA       MOV     ?V2,#-0x56
   \   000030   78..         MOV     R0,#?V2
   \   000032   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000035   78..         MOV     R0,#?V0
   \   000037   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00003A   EE           MOV     A,R6
   \   00003B   F9           MOV     R1,A
   \   00003C   7C00         MOV     R4,#0x0
   \   00003E   7D00         MOV     R5,#0x0
   \   000040   7A00         MOV     R2,#0x0
   \   000042   7B00         MOV     R3,#0x0
   \   000044   12....       LCALL   ??zb_SendDataRequest?relay; Banked call to: zb_SendDataRequest
   \   000047   7405         MOV     A,#0x5
   \   000049   12....       LCALL   ?DEALLOC_XSTACK8
     81          }
   \   00004C   7F03         MOV     R7,#0x3
   \   00004E   02....       LJMP    ?BANKED_LEAVE_XDATA
     82          /*********************************************************************************************
     83          * 名称：ZXBeeInfRecv()
     84          * 功能：节点收到无线数据包
     85          * 参数：*pkg -- 收到的无线数据包
     86          * 返回：
     87          * 修改：
     88          * 注释：
     89          *********************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     90          void ZXBeeInfRecv(char *pkg, int len)
   \                     ZXBeeInfRecv:
     91          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V2,R2
   \   000007   8B..         MOV     ?V3,R3
   \   000009   8C..         MOV     ?V0,R4
   \   00000B   8D..         MOV     ?V1,R5
     92            char *p = ZXBeeDecodePackage(pkg, len);
   \   00000D                ; Setup parameters for call to function ZXBeeDecodePackage
   \   00000D   AC..         MOV     R4,?V0
   \   00000F   AD..         MOV     R5,?V1
   \   000011   AA..         MOV     R2,?V2
   \   000013   AB..         MOV     R3,?V3
   \   000015   12....       LCALL   ??ZXBeeDecodePackage?relay; Banked call to: ZXBeeDecodePackage
   \   000018   8A..         MOV     ?V4,R2
   \   00001A   8B..         MOV     ?V5,R3
   \   00001C   AE..         MOV     R6,?V4
   \   00001E   AF..         MOV     R7,?V5
     93            if (p != NULL) {
   \   000020   EE           MOV     A,R6
   \   000021   4F           ORL     A,R7
   \   000022   6012         JZ      ??ZXBeeInfRecv_0
     94              ZXBeeInfSend(p, strlen(p));
   \   000024                ; Setup parameters for call to function ZXBeeInfSend
   \   000024                ; Setup parameters for call to function strlen
   \   000024   EE           MOV     A,R6
   \   000025   FA           MOV     R2,A
   \   000026   EF           MOV     A,R7
   \   000027   FB           MOV     R3,A
   \   000028   12....       LCALL   ??strlen?relay       ; Banked call to: strlen
   \   00002B   EA           MOV     A,R2
   \   00002C   FC           MOV     R4,A
   \   00002D   EB           MOV     A,R3
   \   00002E   FD           MOV     R5,A
   \   00002F   EE           MOV     A,R6
   \   000030   FA           MOV     R2,A
   \   000031   EF           MOV     A,R7
   \   000032   FB           MOV     R3,A
   \   000033   12....       LCALL   ??ZXBeeInfSend?relay ; Banked call to: ZXBeeInfSend
     95            }
     96          }
   \                     ??ZXBeeInfRecv_0:
   \   000036   7F06         MOV     R7,#0x6
   \   000038   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ZXBeeInfInit?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZXBeeInfInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ZXBeeSendConfirm?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZXBeeSendConfirm

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ZXBeeInfSend?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZXBeeInfSend

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ZXBeeInfRecv?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZXBeeInfRecv

   Maximum stack usage in bytes:

   XSTACK Function
   ------ --------
      0   ZXBeeInfInit
     14   ZXBeeInfRecv
       14   -> ZXBeeDecodePackage
       14   -> ZXBeeInfSend
       14   -> strlen
     30   ZXBeeInfSend
       11   -> HalLedSet
       16   -> zb_SendDataRequest
      9   ZXBeeSendConfirm
        9   -> GetLinkStatus
        9   -> myReset


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  ??ZXBeeInfInit?relay
       6  ??ZXBeeInfRecv?relay
       6  ??ZXBeeInfSend?relay
       6  ??ZXBeeSendConfirm?relay
       3  ZXBeeInfInit
      59  ZXBeeInfRecv
      81  ZXBeeInfSend
      60  ZXBeeSendConfirm
       1  txError

 
 203 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   1 byte  in segment XDATA_Z
 
 227 bytes of CODE  memory
   1 byte  of XDATA memory

Errors: none
Warnings: none
