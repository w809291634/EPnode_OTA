###############################################################################
#
# IAR C/C++ Compiler V9.10.1.2146 for 8051                07/Jul/2023  16:40:37
# Copyright 2004-2014 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\device_find.c
#    Command line       =  
#        -f "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DRTR_NWK) -f "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=8448
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
#        -DREJOIN_POLL_RATE=440 "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\device_find.c"
#        -D HOLD_AUTO_START -D BUILD_ALL_DEVICES -D REFLECTOR -D NV_INIT -D
#        XLAB -D CC2530_Serial -D MAKE_CRC_SHDW -D CC2530_USE_IAP -lC
#        "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\"
#        -lA "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\"
#        --diag_suppress Pe001,Pa010 -o "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\Obj\"
#        -e --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 8 -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\Source\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\common\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\osal\mcu\ccsoc\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -On
#    List file          =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\device_find.lst
#    Object file        =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\Obj\device_find.r51
#
###############################################################################

I:\1_git_code\EPnode_OTA\CC2530 IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\device_find.c
      1          /*********************************************************************************************
      2          * 文件：zxbee.c
      3          * 作者：Xuzhy 2018.5.16
      4          * 说明：节点长短地址转换
      5          * 修改：
      6          * 注释：
      7          *********************************************************************************************/
      8          
      9          /*********************************************************************************************
     10          * 头文件
     11          *********************************************************************************************/
     12          #include "ZComDef.h"
     13          #include "OSAL.h"
     14          #include "sapi.h"
     15          #include "hal_key.h"
     16          #include "hal_led.h"
     17          #include "DebugTrace.h"
     18          #include "SimpleApp.h"
     19          #include "osal_nv.h"
     20          #include "NLMEDE.h"
     21          #include "AF.h"
     22          #include "OnBoard.h"
     23          #include "nwk_util.h"
     24          #include "ZDProfile.h"
     25          #include "ZDObject.h"
     26          #include "hal_led.h"
     27          #include "hal_key.h"
     28          #include "sapi.h"
     29          #include "MT_SAPI.h"
     30          
     31          #if defined( MT_TASK )
     32            #include "osal_nv.h"
     33          #endif
     34          #include "mt_app.h"
     35          #include "mt_uart.h"
     36          #include "mt.h"
     37          /*********************************************************************************************
     38          * 宏定义
     39          *********************************************************************************************/
     40          #define my_FindDeviceConfirm zb_FindDeviceConfirm
     41          #define SAPICB_DATA_CNF   0xE0
     42          /*********************************************************************************************
     43          * 函数原型说明
     44          *********************************************************************************************/
     45          void my_FindDevice(uint8 searchType, uint8 *searchKey);
     46          void my_FindDeviceConfirm( uint8 searchType, uint8 *searchKey, uint8 *result );
     47          void SAPI_SendCback( uint8 event, uint8 status, uint16 data );
     48          static int my_FindDeviceProc( uint16 source, uint16 command, uint16 len, uint8 *pData);
     49          void my_SendDataRequest ( uint8* destination, uint16 commandId, uint8 len,
     50                                    uint8 *pData, uint8 handle, uint8 txOptions, uint8 radius );  
     51          extern void _zb_ReceiveDataIndication( uint16 source, uint16 command, uint16 len, uint8 *pData  );
     52          /*********************************************************************************************
     53          * 名称：my_SendDataRequest()
     54          * 功能：长地址发送函数
     55          * 参数：
     56          * 返回：
     57          * 修改：
     58          * 注释：
     59          *********************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     60          void my_SendDataRequest ( uint8* destination, uint16 commandId, uint8 len,
   \                     my_SendDataRequest:
     61                                    uint8 *pData, uint8 handle, uint8 txOptions, uint8 radius )
     62          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000   74F1         MOV     A,#-0xf
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 14
   \   000005   74F2         MOV     A,#-0xe
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EA           MOV     A,R2
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EB           MOV     A,R3
   \   000014   F0           MOVX    @DPTR,A
   \   000015   EC           MOV     A,R4
   \   000016   FE           MOV     R6,A
   \   000017   ED           MOV     A,R5
   \   000018   FF           MOV     R7,A
   \   000019   89..         MOV     ?V6,R1
   \   00001B   7420         MOV     A,#0x20
   \   00001D   12....       LCALL   ?XSTACK_DISP0_8
   \   000020   E0           MOVX    A,@DPTR
   \   000021   F5..         MOV     ?V4,A
   \   000023   7421         MOV     A,#0x21
   \   000025   12....       LCALL   ?XSTACK_DISP0_8
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F5..         MOV     ?V5,A
     63            afStatus_t status;
     64            afAddrType_t dstAddr;
     65          
     66            txOptions |= AF_DISCV_ROUTE;
   \   00002B   D3           SETB    C
   \   00002C   E5..         MOV     A,?V4
   \   00002E   92E5         MOV     0xE0 /* A   */.5,C
   \   000030   F5..         MOV     ?V4,A
     67          
     68            osal_memcpy(dstAddr.addr.extAddr, destination, Z_EXTADDR_LEN);
   \   000032                ; Setup parameters for call to function osal_memcpy
   \   000032   85..82       MOV     DPL,?XSP + 0
   \   000035   85..83       MOV     DPH,?XSP + 1
   \   000038   E0           MOVX    A,@DPTR
   \   000039   F5..         MOV     ?V0,A
   \   00003B   A3           INC     DPTR
   \   00003C   E0           MOVX    A,@DPTR
   \   00003D   F5..         MOV     ?V1,A
   \   00003F   75..00       MOV     ?V2,#0x0
   \   000042   78..         MOV     R0,#?V0
   \   000044   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000047   7C08         MOV     R4,#0x8
   \   000049   7D00         MOV     R5,#0x0
   \   00004B   7405         MOV     A,#0x5
   \   00004D   12....       LCALL   ?XSTACK_DISP101_8
   \   000050   12....       LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
   \   000053   7403         MOV     A,#0x3
   \   000055   12....       LCALL   ?DEALLOC_XSTACK8
     69          
     70            dstAddr.addrMode = afAddr64Bit;
   \   000058   740A         MOV     A,#0xa
   \   00005A   12....       LCALL   ?XSTACK_DISP0_8
   \   00005D   7403         MOV     A,#0x3
   \   00005F   F0           MOVX    @DPTR,A
     71            dstAddr.panId = 0;                                    // Not an inter-pan message.
   \   000060   740C         MOV     A,#0xc
   \   000062   12....       LCALL   ?XSTACK_DISP0_8
   \   000065   7400         MOV     A,#0x0
   \   000067   F0           MOVX    @DPTR,A
   \   000068   A3           INC     DPTR
   \   000069   7400         MOV     A,#0x0
   \   00006B   F0           MOVX    @DPTR,A
     72            dstAddr.endPoint = sapi_epDesc.simpleDesc->EndPoint;  // Set the endpoint.
   \   00006C   90....       MOV     DPTR,#sapi_epDesc + 3
   \   00006F   E0           MOVX    A,@DPTR
   \   000070   F8           MOV     R0,A
   \   000071   A3           INC     DPTR
   \   000072   E0           MOVX    A,@DPTR
   \   000073   F583         MOV     DPH,A
   \   000075   8882         MOV     DPL,R0
   \   000077   E0           MOVX    A,@DPTR
   \   000078   C0E0         PUSH    A
   \   00007A   740B         MOV     A,#0xb
   \   00007C   12....       LCALL   ?XSTACK_DISP0_8
   \   00007F   D0E0         POP     A
   \   000081   F0           MOVX    @DPTR,A
     73          
     74            // Send the message
     75            status = AF_DataRequest(&dstAddr, &sapi_epDesc, commandId, len,
     76                                    pData, &handle, txOptions, radius);
   \   000082                ; Setup parameters for call to function AF_DataRequest
   \   000082   E5..         MOV     A,?V5
   \   000084   F5..         MOV     ?V0,A
   \   000086   78..         MOV     R0,#?V0
   \   000088   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00008B   7420         MOV     A,#0x20
   \   00008D   12....       LCALL   ?XSTACK_DISP100_8
   \   000090   88..         MOV     ?V0,R0
   \   000092   89..         MOV     ?V1,R1
   \   000094   78..         MOV     R0,#?V0
   \   000096   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000099   7420         MOV     A,#0x20
   \   00009B   12....       LCALL   ?XSTACK_DISP0_8
   \   00009E   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000A1   85....       MOV     ?V0,?V6
   \   0000A4   75..00       MOV     ?V1,#0x0
   \   0000A7   78..         MOV     R0,#?V0
   \   0000A9   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000AC   8E..         MOV     ?V0,R6
   \   0000AE   8F..         MOV     ?V1,R7
   \   0000B0   78..         MOV     R0,#?V0
   \   0000B2   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000B5   A9..         MOV     R1,?V4
   \   0000B7   7C..         MOV     R4,#sapi_epDesc & 0xff
   \   0000B9   7D..         MOV     R5,#(sapi_epDesc >> 8) & 0xff
   \   0000BB   740B         MOV     A,#0xb
   \   0000BD   12....       LCALL   ?XSTACK_DISP101_8
   \   0000C0   12....       LCALL   ??AF_DataRequest?relay; Banked call to: AF_DataRequest
   \   0000C3   7409         MOV     A,#0x9
   \   0000C5   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000C8   E9           MOV     A,R1
   \   0000C9   F5..         MOV     ?V3,A
     77          
     78            if (status != afStatus_SUCCESS)
   \   0000CB   E5..         MOV     A,?V3
   \   0000CD   6010         JZ      ??my_SendDataRequest_0
     79            {
     80              SAPI_SendCback( SAPICB_DATA_CNF, status, handle );
   \   0000CF                ; Setup parameters for call to function SAPI_SendCback
   \   0000CF   741F         MOV     A,#0x1f
   \   0000D1   12....       LCALL   ?XSTACK_DISP0_8
   \   0000D4   E0           MOVX    A,@DPTR
   \   0000D5   FC           MOV     R4,A
   \   0000D6   7D00         MOV     R5,#0x0
   \   0000D8   AA..         MOV     R2,?V3
   \   0000DA   79E0         MOV     R1,#-0x20
   \   0000DC   12....       LCALL   ??SAPI_SendCback?relay; Banked call to: SAPI_SendCback
     81            }
     82          }
   \                     ??my_SendDataRequest_0:
   \   0000DF   740E         MOV     A,#0xe
   \   0000E1   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000E4   7F07         MOV     R7,#0x7
   \   0000E6   02....       LJMP    ?BANKED_LEAVE_XDATA
     83          /*********************************************************************************************
     84          * 名称：my_FindDevice()
     85          * 功能：发送设备地址查找请求
     86          * 参数：searchType: 查找地址类型
     87          *       searchKey：请求地址
     88          * 返回：
     89          * 修改：
     90          * 注释：
     91          *********************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     92          void my_FindDevice(uint8 searchType, uint8 *searchKey)
   \                     my_FindDevice:
     93          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V1,R1
   \   000007   8A..         MOV     ?V6,R2
   \   000009   8B..         MOV     ?V7,R3
     94            uint16 dAddr;
     95            uint16 cmd;
     96            uint8 dlen;
     97            if (ZB_IEEE_SEARCH == searchType)  {
   \   00000B   7401         MOV     A,#0x1
   \   00000D   65..         XRL     A,?V1
   \   00000F   7042         JNZ     ??my_FindDevice_0
     98              dAddr = 0xffff;
   \   000011   75..FF       MOV     ?V2,#-0x1
   \   000014   75..FF       MOV     ?V3,#-0x1
     99              cmd = 0xff01;
   \   000017   7E01         MOV     R6,#0x1
   \   000019   7FFF         MOV     R7,#-0x1
    100              dlen = 8;
   \   00001B   75..08       MOV     ?V0,#0x8
    101              //my_SendDataRequest(searchKey, cmd, dlen, searchKey , 0, 0, AF_DEFAULT_RADIUS );
    102              zb_SendDataRequest(dAddr, cmd, dlen, searchKey , 0, AF_ACK_REQUEST, AF_DEFAULT_RADIUS );
   \   00001E                ; Setup parameters for call to function zb_SendDataRequest
   \   00001E   75..1E       MOV     ?V4,#0x1e
   \   000021   78..         MOV     R0,#?V4
   \   000023   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000026   75..10       MOV     ?V4,#0x10
   \   000029   78..         MOV     R0,#?V4
   \   00002B   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002E   75..00       MOV     ?V4,#0x0
   \   000031   78..         MOV     R0,#?V4
   \   000033   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000036   85....       MOV     ?V4,?V6
   \   000039   85....       MOV     ?V5,?V7
   \   00003C   78..         MOV     R0,#?V4
   \   00003E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000041   A9..         MOV     R1,?V0
   \   000043   EE           MOV     A,R6
   \   000044   FC           MOV     R4,A
   \   000045   EF           MOV     A,R7
   \   000046   FD           MOV     R5,A
   \   000047   AA..         MOV     R2,?V2
   \   000049   AB..         MOV     R3,?V3
   \   00004B   12....       LCALL   ??zb_SendDataRequest?relay; Banked call to: zb_SendDataRequest
   \   00004E   7405         MOV     A,#0x5
   \   000050   12....       LCALL   ?DEALLOC_XSTACK8
    103            }
    104            if (ZB_NWKA_SEARCH == searchType) {
   \                     ??my_FindDevice_0:
   \   000053   7402         MOV     A,#0x2
   \   000055   65..         XRL     A,?V1
   \   000057   705E         JNZ     ??my_FindDevice_1
    105              dAddr = searchKey[0]<<8 | searchKey[1];
   \   000059   85..82       MOV     DPL,?V6
   \   00005C   85..83       MOV     DPH,?V7
   \   00005F   E0           MOVX    A,@DPTR
   \   000060   F8           MOV     R0,A
   \   000061   7900         MOV     R1,#0x0
   \   000063   E4           CLR     A
   \   000064   C8           XCH     A,R0
   \   000065   F9           MOV     R1,A
   \   000066   85..82       MOV     DPL,?V6
   \   000069   85..83       MOV     DPH,?V7
   \   00006C   A3           INC     DPTR
   \   00006D   E0           MOVX    A,@DPTR
   \   00006E   FA           MOV     R2,A
   \   00006F   7B00         MOV     R3,#0x0
   \   000071   E8           MOV     A,R0
   \   000072   4A           ORL     A,R2
   \   000073   F8           MOV     R0,A
   \   000074   E9           MOV     A,R1
   \   000075   4B           ORL     A,R3
   \   000076   F9           MOV     R1,A
   \   000077   88..         MOV     ?V2,R0
   \   000079   89..         MOV     ?V3,R1
    106              cmd = 0xff02;
   \   00007B   7E02         MOV     R6,#0x2
   \   00007D   7FFF         MOV     R7,#-0x1
    107              dlen = 2;
   \   00007F   75..02       MOV     ?V0,#0x2
    108              zb_SendDataRequest(dAddr, cmd, dlen,searchKey , 0, AF_ACK_REQUEST, AF_DEFAULT_RADIUS );
   \   000082                ; Setup parameters for call to function zb_SendDataRequest
   \   000082   75..1E       MOV     ?V4,#0x1e
   \   000085   78..         MOV     R0,#?V4
   \   000087   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00008A   75..10       MOV     ?V4,#0x10
   \   00008D   78..         MOV     R0,#?V4
   \   00008F   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000092   75..00       MOV     ?V4,#0x0
   \   000095   78..         MOV     R0,#?V4
   \   000097   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00009A   85....       MOV     ?V4,?V6
   \   00009D   85....       MOV     ?V5,?V7
   \   0000A0   78..         MOV     R0,#?V4
   \   0000A2   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A5   A9..         MOV     R1,?V0
   \   0000A7   EE           MOV     A,R6
   \   0000A8   FC           MOV     R4,A
   \   0000A9   EF           MOV     A,R7
   \   0000AA   FD           MOV     R5,A
   \   0000AB   AA..         MOV     R2,?V2
   \   0000AD   AB..         MOV     R3,?V3
   \   0000AF   12....       LCALL   ??zb_SendDataRequest?relay; Banked call to: zb_SendDataRequest
   \   0000B2   7405         MOV     A,#0x5
   \   0000B4   12....       LCALL   ?DEALLOC_XSTACK8
    109            }
    110           
    111          }
   \                     ??my_FindDevice_1:
   \   0000B7   7F08         MOV     R7,#0x8
   \   0000B9   02....       LJMP    ?BANKED_LEAVE_XDATA
    112          /*********************************************************************************************
    113          * 名称：my_FindDeviceProc()
    114          * 功能：地址查找处理
    115          * 参数：
    116          * 返回：
    117          * 修改：
    118          * 注释：
    119          *********************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    120          static int my_FindDeviceProc( uint16 source, uint16 command, uint16 len, uint8 *pData) 
   \                     my_FindDeviceProc:
    121          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000   74F1         MOV     A,#-0xf
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 14
   \   000005   74F2         MOV     A,#-0xe
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   7402         MOV     A,#0x2
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   EA           MOV     A,R2
   \   000010   F0           MOVX    @DPTR,A
   \   000011   A3           INC     DPTR
   \   000012   EB           MOV     A,R3
   \   000013   F0           MOVX    @DPTR,A
   \   000014   85..82       MOV     DPL,?XSP + 0
   \   000017   85..83       MOV     DPH,?XSP + 1
   \   00001A   EC           MOV     A,R4
   \   00001B   F0           MOVX    @DPTR,A
   \   00001C   A3           INC     DPTR
   \   00001D   ED           MOV     A,R5
   \   00001E   F0           MOVX    @DPTR,A
   \   00001F   741D         MOV     A,#0x1d
   \   000021   12....       LCALL   ?XSTACK_DISP0_8
   \   000024   E0           MOVX    A,@DPTR
   \   000025   F5..         MOV     ?V2,A
   \   000027   A3           INC     DPTR
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F5..         MOV     ?V3,A
   \   00002B   741F         MOV     A,#0x1f
   \   00002D   12....       LCALL   ?XSTACK_DISP0_8
   \   000030   E0           MOVX    A,@DPTR
   \   000031   F5..         MOV     ?V0,A
   \   000033   A3           INC     DPTR
   \   000034   E0           MOVX    A,@DPTR
   \   000035   F5..         MOV     ?V1,A
    122            uint8 dat[10];
    123            
    124            if (command == 0xff01) {
   \   000037   85..82       MOV     DPL,?XSP + 0
   \   00003A   85..83       MOV     DPH,?XSP + 1
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   6401         XRL     A,#0x1
   \   000040   7004         JNZ     ??my_FindDeviceProc_0
   \   000042   A3           INC     DPTR
   \   000043   E0           MOVX    A,@DPTR
   \   000044   64FF         XRL     A,#0xff
   \                     ??my_FindDeviceProc_0:
   \   000046   6003         JZ      $+5
   \   000048   02....       LJMP    ??my_FindDeviceProc_1 & 0xFFFF
    125              uint8 *pExtAddr = dat;
   \   00004B   7404         MOV     A,#0x4
   \   00004D   12....       LCALL   ?XSTACK_DISP100_8
   \   000050   88..         MOV     ?V4,R0
   \   000052   89..         MOV     ?V5,R1
   \   000054   AE..         MOV     R6,?V4
   \   000056   AF..         MOV     R7,?V5
    126              ZMacGetReq( ZMacExtAddr, pExtAddr );
   \   000058                ; Setup parameters for call to function ZMacGetReq
   \   000058   EE           MOV     A,R6
   \   000059   FA           MOV     R2,A
   \   00005A   EF           MOV     A,R7
   \   00005B   FB           MOV     R3,A
   \   00005C   79E2         MOV     R1,#-0x1e
   \   00005E   12....       LCALL   ??ZMacGetReq?relay   ; Banked call to: ZMacGetReq
   \   000061   E9           MOV     A,R1
    127              if (len == Z_EXTADDR_LEN && TRUE == osal_memcmp(pData, pExtAddr, Z_EXTADDR_LEN)) {    
   \   000062   7408         MOV     A,#0x8
   \   000064   65..         XRL     A,?V2
   \   000066   7004         JNZ     ??my_FindDeviceProc_2
   \   000068   7400         MOV     A,#0x0
   \   00006A   65..         XRL     A,?V3
   \                     ??my_FindDeviceProc_2:
   \   00006C   6003         JZ      $+5
   \   00006E   02....       LJMP    ??my_FindDeviceProc_3 & 0xFFFF
   \   000071                ; Setup parameters for call to function osal_memcmp
   \   000071   8E..         MOV     ?V4,R6
   \   000073   8F..         MOV     ?V5,R7
   \   000075   75..00       MOV     ?V6,#0x0
   \   000078   78..         MOV     R0,#?V4
   \   00007A   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00007D   7C08         MOV     R4,#0x8
   \   00007F   7D00         MOV     R5,#0x0
   \   000081   85..82       MOV     DPL,?V0
   \   000084   85..83       MOV     DPH,?V1
   \   000087   A982         MOV     R1,DPL
   \   000089   AA83         MOV     R2,DPH
   \   00008B   7B00         MOV     R3,#0x0
   \   00008D   12....       LCALL   ??osal_memcmp?relay  ; Banked call to: osal_memcmp
   \   000090   7403         MOV     A,#0x3
   \   000092   12....       LCALL   ?DEALLOC_XSTACK8
   \   000095   E9           MOV     A,R1
   \   000096   6401         XRL     A,#0x1
   \   000098   705D         JNZ     ??my_FindDeviceProc_3
    128                dat[8] = NLME_GetShortAddr();
   \   00009A                ; Setup parameters for call to function NLME_GetShortAddr
   \   00009A   12....       LCALL   ??NLME_GetShortAddr?relay; Banked call to: NLME_GetShortAddr
   \   00009D   EA           MOV     A,R2
   \   00009E   C0E0         PUSH    A
   \   0000A0   740C         MOV     A,#0xc
   \   0000A2   12....       LCALL   ?XSTACK_DISP0_8
   \   0000A5   D0E0         POP     A
   \   0000A7   F0           MOVX    @DPTR,A
    129                dat[9] = NLME_GetShortAddr() >> 8;
   \   0000A8                ; Setup parameters for call to function NLME_GetShortAddr
   \   0000A8   12....       LCALL   ??NLME_GetShortAddr?relay; Banked call to: NLME_GetShortAddr
   \   0000AB   E4           CLR     A
   \   0000AC   CB           XCH     A,R3
   \   0000AD   FA           MOV     R2,A
   \   0000AE   EA           MOV     A,R2
   \   0000AF   C0E0         PUSH    A
   \   0000B1   740D         MOV     A,#0xd
   \   0000B3   12....       LCALL   ?XSTACK_DISP0_8
   \   0000B6   D0E0         POP     A
   \   0000B8   F0           MOVX    @DPTR,A
    130                zb_SendDataRequest(source, 0xfe01, 10, dat, 0, AF_ACK_REQUEST, AF_DEFAULT_RADIUS);
   \   0000B9                ; Setup parameters for call to function zb_SendDataRequest
   \   0000B9   75..1E       MOV     ?V4,#0x1e
   \   0000BC   78..         MOV     R0,#?V4
   \   0000BE   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000C1   75..10       MOV     ?V4,#0x10
   \   0000C4   78..         MOV     R0,#?V4
   \   0000C6   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000C9   75..00       MOV     ?V4,#0x0
   \   0000CC   78..         MOV     R0,#?V4
   \   0000CE   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000D1   7407         MOV     A,#0x7
   \   0000D3   12....       LCALL   ?XSTACK_DISP100_8
   \   0000D6   88..         MOV     ?V4,R0
   \   0000D8   89..         MOV     ?V5,R1
   \   0000DA   78..         MOV     R0,#?V4
   \   0000DC   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000DF   790A         MOV     R1,#0xa
   \   0000E1   7C01         MOV     R4,#0x1
   \   0000E3   7DFE         MOV     R5,#-0x2
   \   0000E5   7407         MOV     A,#0x7
   \   0000E7   12....       LCALL   ?XSTACK_DISP0_8
   \   0000EA   E0           MOVX    A,@DPTR
   \   0000EB   FA           MOV     R2,A
   \   0000EC   A3           INC     DPTR
   \   0000ED   E0           MOVX    A,@DPTR
   \   0000EE   FB           MOV     R3,A
   \   0000EF   12....       LCALL   ??zb_SendDataRequest?relay; Banked call to: zb_SendDataRequest
   \   0000F2   7405         MOV     A,#0x5
   \   0000F4   12....       LCALL   ?DEALLOC_XSTACK8
    131              }
    132              return 1;
   \                     ??my_FindDeviceProc_3:
   \   0000F7   7A01         MOV     R2,#0x1
   \   0000F9   7B00         MOV     R3,#0x0
   \   0000FB   02....       LJMP    ??my_FindDeviceProc_4 & 0xFFFF
    133            }
    134            if (command == 0xff02) {
   \                     ??my_FindDeviceProc_1:
   \   0000FE   85..82       MOV     DPL,?XSP + 0
   \   000101   85..83       MOV     DPH,?XSP + 1
   \   000104   E0           MOVX    A,@DPTR
   \   000105   6402         XRL     A,#0x2
   \   000107   7004         JNZ     ??my_FindDeviceProc_5
   \   000109   A3           INC     DPTR
   \   00010A   E0           MOVX    A,@DPTR
   \   00010B   64FF         XRL     A,#0xff
   \                     ??my_FindDeviceProc_5:
   \   00010D   6003         JZ      $+5
   \   00010F   02....       LJMP    ??my_FindDeviceProc_6 & 0xFFFF
    135              uint16 sa = NLME_GetShortAddr();
   \   000112                ; Setup parameters for call to function NLME_GetShortAddr
   \   000112   12....       LCALL   ??NLME_GetShortAddr?relay; Banked call to: NLME_GetShortAddr
   \   000115   8A..         MOV     ?V4,R2
   \   000117   8B..         MOV     ?V5,R3
   \   000119   AE..         MOV     R6,?V4
   \   00011B   AF..         MOV     R7,?V5
    136              if (len == 2 && (pData[0]<<8 | pData[1]) == sa) {
   \   00011D   7402         MOV     A,#0x2
   \   00011F   65..         XRL     A,?V2
   \   000121   7004         JNZ     ??my_FindDeviceProc_7
   \   000123   7400         MOV     A,#0x0
   \   000125   65..         XRL     A,?V3
   \                     ??my_FindDeviceProc_7:
   \   000127   6003         JZ      $+5
   \   000129   02....       LJMP    ??my_FindDeviceProc_8 & 0xFFFF
   \   00012C   85..82       MOV     DPL,?V0
   \   00012F   85..83       MOV     DPH,?V1
   \   000132   E0           MOVX    A,@DPTR
   \   000133   F8           MOV     R0,A
   \   000134   7900         MOV     R1,#0x0
   \   000136   E4           CLR     A
   \   000137   C8           XCH     A,R0
   \   000138   F9           MOV     R1,A
   \   000139   85..82       MOV     DPL,?V0
   \   00013C   85..83       MOV     DPH,?V1
   \   00013F   A3           INC     DPTR
   \   000140   E0           MOVX    A,@DPTR
   \   000141   FA           MOV     R2,A
   \   000142   7B00         MOV     R3,#0x0
   \   000144   E8           MOV     A,R0
   \   000145   4A           ORL     A,R2
   \   000146   F8           MOV     R0,A
   \   000147   E9           MOV     A,R1
   \   000148   4B           ORL     A,R3
   \   000149   F9           MOV     R1,A
   \   00014A   EE           MOV     A,R6
   \   00014B   68           XRL     A,R0
   \   00014C   7002         JNZ     ??my_FindDeviceProc_9
   \   00014E   EF           MOV     A,R7
   \   00014F   69           XRL     A,R1
   \                     ??my_FindDeviceProc_9:
   \   000150   706A         JNZ     ??my_FindDeviceProc_8
    137                dat[0] = sa;
   \   000152   EE           MOV     A,R6
   \   000153   C0E0         PUSH    A
   \   000155   7404         MOV     A,#0x4
   \   000157   12....       LCALL   ?XSTACK_DISP0_8
   \   00015A   D0E0         POP     A
   \   00015C   F0           MOVX    @DPTR,A
    138                dat[1] = sa>>8;
   \   00015D   EE           MOV     A,R6
   \   00015E   F8           MOV     R0,A
   \   00015F   EF           MOV     A,R7
   \   000160   F9           MOV     R1,A
   \   000161   E4           CLR     A
   \   000162   C9           XCH     A,R1
   \   000163   F8           MOV     R0,A
   \   000164   E8           MOV     A,R0
   \   000165   C0E0         PUSH    A
   \   000167   7405         MOV     A,#0x5
   \   000169   12....       LCALL   ?XSTACK_DISP0_8
   \   00016C   D0E0         POP     A
   \   00016E   F0           MOVX    @DPTR,A
    139                ZMacGetReq( ZMacExtAddr, &dat[2] );
   \   00016F                ; Setup parameters for call to function ZMacGetReq
   \   00016F   7406         MOV     A,#0x6
   \   000171   12....       LCALL   ?XSTACK_DISP0_8
   \   000174   AA82         MOV     R2,DPL
   \   000176   AB83         MOV     R3,DPH
   \   000178   79E2         MOV     R1,#-0x1e
   \   00017A   12....       LCALL   ??ZMacGetReq?relay   ; Banked call to: ZMacGetReq
   \   00017D   E9           MOV     A,R1
    140                zb_SendDataRequest(source, 0xfe02, 10, dat, 0, AF_ACK_REQUEST, AF_DEFAULT_RADIUS);
   \   00017E                ; Setup parameters for call to function zb_SendDataRequest
   \   00017E   75..1E       MOV     ?V4,#0x1e
   \   000181   78..         MOV     R0,#?V4
   \   000183   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000186   75..10       MOV     ?V4,#0x10
   \   000189   78..         MOV     R0,#?V4
   \   00018B   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00018E   75..00       MOV     ?V4,#0x0
   \   000191   78..         MOV     R0,#?V4
   \   000193   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000196   7407         MOV     A,#0x7
   \   000198   12....       LCALL   ?XSTACK_DISP100_8
   \   00019B   88..         MOV     ?V4,R0
   \   00019D   89..         MOV     ?V5,R1
   \   00019F   78..         MOV     R0,#?V4
   \   0001A1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001A4   790A         MOV     R1,#0xa
   \   0001A6   7C02         MOV     R4,#0x2
   \   0001A8   7DFE         MOV     R5,#-0x2
   \   0001AA   7407         MOV     A,#0x7
   \   0001AC   12....       LCALL   ?XSTACK_DISP0_8
   \   0001AF   E0           MOVX    A,@DPTR
   \   0001B0   FA           MOV     R2,A
   \   0001B1   A3           INC     DPTR
   \   0001B2   E0           MOVX    A,@DPTR
   \   0001B3   FB           MOV     R3,A
   \   0001B4   12....       LCALL   ??zb_SendDataRequest?relay; Banked call to: zb_SendDataRequest
   \   0001B7   7405         MOV     A,#0x5
   \   0001B9   12....       LCALL   ?DEALLOC_XSTACK8
    141              }
    142              return 1;
   \                     ??my_FindDeviceProc_8:
   \   0001BC   7A01         MOV     R2,#0x1
   \   0001BE   7B00         MOV     R3,#0x0
   \   0001C0   806E         SJMP    ??my_FindDeviceProc_4
    143            }
    144            if (command == 0xfe01) {
   \                     ??my_FindDeviceProc_6:
   \   0001C2   85..82       MOV     DPL,?XSP + 0
   \   0001C5   85..83       MOV     DPH,?XSP + 1
   \   0001C8   E0           MOVX    A,@DPTR
   \   0001C9   6401         XRL     A,#0x1
   \   0001CB   7004         JNZ     ??my_FindDeviceProc_10
   \   0001CD   A3           INC     DPTR
   \   0001CE   E0           MOVX    A,@DPTR
   \   0001CF   64FE         XRL     A,#0xfe
   \                     ??my_FindDeviceProc_10:
   \   0001D1   7024         JNZ     ??my_FindDeviceProc_11
    145              if (len == 10) {
   \   0001D3   740A         MOV     A,#0xa
   \   0001D5   65..         XRL     A,?V2
   \   0001D7   7004         JNZ     ??my_FindDeviceProc_12
   \   0001D9   7400         MOV     A,#0x0
   \   0001DB   65..         XRL     A,?V3
   \                     ??my_FindDeviceProc_12:
   \   0001DD   7012         JNZ     ??my_FindDeviceProc_13
    146                my_FindDeviceConfirm(ZB_IEEE_SEARCH, pData, (unsigned char *)&pData[8]);
   \   0001DF                ; Setup parameters for call to function zb_FindDeviceConfirm
   \   0001DF   E5..         MOV     A,?V0
   \   0001E1   2408         ADD     A,#0x8
   \   0001E3   FC           MOV     R4,A
   \   0001E4   E4           CLR     A
   \   0001E5   35..         ADDC    A,?V1
   \   0001E7   FD           MOV     R5,A
   \   0001E8   AA..         MOV     R2,?V0
   \   0001EA   AB..         MOV     R3,?V1
   \   0001EC   7901         MOV     R1,#0x1
   \   0001EE   12....       LCALL   ??zb_FindDeviceConfirm?relay; Banked call to: zb_FindDeviceConfirm
    147              }
    148              return 1;
   \                     ??my_FindDeviceProc_13:
   \   0001F1   7A01         MOV     R2,#0x1
   \   0001F3   7B00         MOV     R3,#0x0
   \   0001F5   8039         SJMP    ??my_FindDeviceProc_4
    149            }
    150            if (command == 0xfe02) {
   \                     ??my_FindDeviceProc_11:
   \   0001F7   85..82       MOV     DPL,?XSP + 0
   \   0001FA   85..83       MOV     DPH,?XSP + 1
   \   0001FD   E0           MOVX    A,@DPTR
   \   0001FE   6402         XRL     A,#0x2
   \   000200   7004         JNZ     ??my_FindDeviceProc_14
   \   000202   A3           INC     DPTR
   \   000203   E0           MOVX    A,@DPTR
   \   000204   64FE         XRL     A,#0xfe
   \                     ??my_FindDeviceProc_14:
   \   000206   7024         JNZ     ??my_FindDeviceProc_15
    151              if (len == 10) {
   \   000208   740A         MOV     A,#0xa
   \   00020A   65..         XRL     A,?V2
   \   00020C   7004         JNZ     ??my_FindDeviceProc_16
   \   00020E   7400         MOV     A,#0x0
   \   000210   65..         XRL     A,?V3
   \                     ??my_FindDeviceProc_16:
   \   000212   7012         JNZ     ??my_FindDeviceProc_17
    152                my_FindDeviceConfirm(ZB_NWKA_SEARCH, pData, (unsigned char *)&pData[2]);
   \   000214                ; Setup parameters for call to function zb_FindDeviceConfirm
   \   000214   E5..         MOV     A,?V0
   \   000216   2402         ADD     A,#0x2
   \   000218   FC           MOV     R4,A
   \   000219   E4           CLR     A
   \   00021A   35..         ADDC    A,?V1
   \   00021C   FD           MOV     R5,A
   \   00021D   AA..         MOV     R2,?V0
   \   00021F   AB..         MOV     R3,?V1
   \   000221   7902         MOV     R1,#0x2
   \   000223   12....       LCALL   ??zb_FindDeviceConfirm?relay; Banked call to: zb_FindDeviceConfirm
    153              }
    154              return 1;
   \                     ??my_FindDeviceProc_17:
   \   000226   7A01         MOV     R2,#0x1
   \   000228   7B00         MOV     R3,#0x0
   \   00022A   8004         SJMP    ??my_FindDeviceProc_4
    155            }
    156            return 0;
   \                     ??my_FindDeviceProc_15:
   \   00022C   7A00         MOV     R2,#0x0
   \   00022E   7B00         MOV     R3,#0x0
   \                     ??my_FindDeviceProc_4:
   \   000230   740E         MOV     A,#0xe
   \   000232   12....       LCALL   ?DEALLOC_XSTACK8
   \   000235   7F07         MOV     R7,#0x7
   \   000237   02....       LJMP    ?BANKED_LEAVE_XDATA
    157          }
    158          /*********************************************************************************************
    159          * 名称：_zb_ReceiveDataIndication()
    160          * 功能：接收数据处理
    161          * 参数：
    162          * 返回：
    163          * 修改：
    164          * 注释：
    165          *********************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    166          void _zb_ReceiveDataIndication( uint16 source, uint16 command, uint16 len, uint8 *pData  )
   \                     _zb_ReceiveDataIndication:
    167          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V2,R2
   \   000007   8B..         MOV     ?V3,R3
   \   000009   8C..         MOV     ?V0,R4
   \   00000B   8D..         MOV     ?V1,R5
   \   00000D   7410         MOV     A,#0x10
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   E0           MOVX    A,@DPTR
   \   000013   FE           MOV     R6,A
   \   000014   A3           INC     DPTR
   \   000015   E0           MOVX    A,@DPTR
   \   000016   FF           MOV     R7,A
   \   000017   7412         MOV     A,#0x12
   \   000019   12....       LCALL   ?XSTACK_DISP0_8
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   F5..         MOV     ?V6,A
   \   00001F   A3           INC     DPTR
   \   000020   E0           MOVX    A,@DPTR
   \   000021   F5..         MOV     ?V7,A
    168            if (my_FindDeviceProc(source, command, len, pData) != 0) return;
   \   000023                ; Setup parameters for call to function my_FindDeviceProc
   \   000023   78..         MOV     R0,#?V6
   \   000025   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000028   8E..         MOV     ?V4,R6
   \   00002A   8F..         MOV     ?V5,R7
   \   00002C   78..         MOV     R0,#?V4
   \   00002E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000031   AC..         MOV     R4,?V0
   \   000033   AD..         MOV     R5,?V1
   \   000035   AA..         MOV     R2,?V2
   \   000037   AB..         MOV     R3,?V3
   \   000039   12....       LCALL   ??my_FindDeviceProc?relay; Banked call to: my_FindDeviceProc
   \   00003C   7404         MOV     A,#0x4
   \   00003E   12....       LCALL   ?DEALLOC_XSTACK8
   \   000041   8A..         MOV     ?V4,R2
   \   000043   8B..         MOV     ?V5,R3
   \   000045   E5..         MOV     A,?V4
   \   000047   45..         ORL     A,?V5
   \   000049   701E         JNZ     ??_zb_ReceiveDataIndication_0
    169            zb_ReceiveDataIndication(source, command, len, pData);
   \   00004B                ; Setup parameters for call to function zb_ReceiveDataIndication
   \   00004B   78..         MOV     R0,#?V6
   \   00004D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000050   8E..         MOV     ?V4,R6
   \   000052   8F..         MOV     ?V5,R7
   \   000054   78..         MOV     R0,#?V4
   \   000056   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000059   AC..         MOV     R4,?V0
   \   00005B   AD..         MOV     R5,?V1
   \   00005D   AA..         MOV     R2,?V2
   \   00005F   AB..         MOV     R3,?V3
   \   000061   12....       LCALL   ??zb_ReceiveDataIndication?relay; Banked call to: zb_ReceiveDataIndication
   \   000064   7404         MOV     A,#0x4
   \   000066   12....       LCALL   ?DEALLOC_XSTACK8
    170          }
   \                     ??_zb_ReceiveDataIndication_0:
   \   000069   7F08         MOV     R7,#0x8
   \   00006B   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??my_SendDataRequest?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    my_SendDataRequest

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??my_FindDevice?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    my_FindDevice

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??my_FindDeviceProc?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    my_FindDeviceProc

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??_zb_ReceiveDataIndication?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    _zb_ReceiveDataIndication

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      0     24   _zb_ReceiveDataIndication
        0     20   -> my_FindDeviceProc
        0     20   -> zb_ReceiveDataIndication
      0     21   my_FindDevice
        0     21   -> zb_SendDataRequest
      1     54   my_FindDeviceProc
        0     29   -> NLME_GetShortAddr
        0     29   -> ZMacGetReq
        0     32   -> osal_memcmp
        0     29   -> zb_FindDeviceConfirm
        0     34   -> zb_SendDataRequest
      1     43   my_SendDataRequest
        0     38   -> AF_DataRequest
        0     29   -> SAPI_SendCback
        0     32   -> osal_memcpy


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  ??_zb_ReceiveDataIndication?relay
       6  ??my_FindDevice?relay
       6  ??my_FindDeviceProc?relay
       6  ??my_SendDataRequest?relay
     110  _zb_ReceiveDataIndication
     188  my_FindDevice
     570  my_FindDeviceProc
     233  my_SendDataRequest

 
 1 101 bytes in segment BANKED_CODE
    24 bytes in segment BANK_RELAYS
 
 1 125 bytes of CODE memory

Errors: none
Warnings: none
