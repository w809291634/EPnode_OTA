###############################################################################
#
# IAR C/C++ Compiler V9.10.1.2146 for 8051                07/Jul/2023  16:40:48
# Copyright 2004-2014 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\zxbee.c
#    Command line       =  
#        -f "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DRTR_NWK) -f "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=8448
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
#        -DREJOIN_POLL_RATE=440 "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\zxbee.c"
#        -D HOLD_AUTO_START -D BUILD_ALL_DEVICES -D REFLECTOR -D NV_INIT -D
#        XLAB -D CC2530_Serial -D MAKE_CRC_SHDW -D CC2530_USE_IAP -lC
#        "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\"
#        -lA "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\"
#        --diag_suppress Pe001,Pa010 -o "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\Obj\"
#        -e --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 8 -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\Source\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\common\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\osal\mcu\ccsoc\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -On
#    List file          =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\List\zxbee.lst
#    Object file        =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-Serial(IAP)\CC2530DB\CC2530-Serial\Obj\zxbee.r51
#
###############################################################################

I:\1_git_code\EPnode_OTA\CC2530 IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\common\zxbee.c
      1          /*********************************************************************************************
      2          * 文件：zxbee.c
      3          * 作者：Xuzhy 2018.5.16
      4          * 说明：ZXBee通信协议数据包解包
      5          * 修改：fuyou 增加透传驱动
      6          * 注释：
      7          *********************************************************************************************/
      8          
      9          /*********************************************************************************************
     10          * 头文件
     11          *********************************************************************************************/
     12          #include <stdio.h>
     13          #include <stdlib.h>
     14          #include <string.h>
     15          #include "hal_types.h"
     16          #include "zxbee.h"
     17          /*********************************************************************************************
     18          * 宏定义
     19          *********************************************************************************************/
     20          
     21          /*********************************************************************************************
     22          * 全局变量
     23          *********************************************************************************************/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     24          static char wbuf[96];
   \                     wbuf:
   \   000000                DS 96
   \   000060                REQUIRE __INIT_XDATA_Z
     25          /*********************************************************************************************
     26          * 函数原型说明
     27          *********************************************************************************************/
     28          int ZXBeeSysCommandProc(char *ptag, char *pval);
     29          int ZXBeeUserProcess(char *ptag, char *pval);
     30          /*********************************************************************************************
     31          * 名称：ZXBeeBegin()
     32          * 功能：ZXBee通信协议的帧头“{”
     33          * 参数：
     34          * 返回：
     35          * 修改：
     36          * 注释：
     37          *********************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     38          int8 ZXBeeBegin(void)
   \                     ZXBeeBegin:
     39          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     40            wbuf[0] = '{';
   \   000004   90....       MOV     DPTR,#wbuf
   \   000007   747B         MOV     A,#0x7b
   \   000009   F0           MOVX    @DPTR,A
     41            wbuf[1] = '\0';
   \   00000A   90....       MOV     DPTR,#wbuf + 1
   \   00000D   7400         MOV     A,#0x0
   \   00000F   F0           MOVX    @DPTR,A
     42            return 1;
   \   000010   7901         MOV     R1,#0x1
   \   000012   D083         POP     DPH
   \   000014   D082         POP     DPL
   \   000016   02....       LJMP    ?BRET
     43          }
     44          /*********************************************************************************************
     45          * 名称：ZXBeeAdd()
     46          * 功能：ZXBee通信协议的数据包中添加数据
     47          * 参数：tag -- 变量；val -- 值
     48          * 返回：len -- 数据长度
     49          * 修改：
     50          * 注释：
     51          *********************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     52          int8 ZXBeeAdd(char* tag, char* val)
   \                     ZXBeeAdd:
     53          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0,R2
   \   000007   8B..         MOV     ?V1,R3
   \   000009   8C..         MOV     ?V2,R4
   \   00000B   8D..         MOV     ?V3,R5
     54            sprintf(&wbuf[strlen(wbuf)], "%s=%s,", tag, val);
   \   00000D                ; Setup parameters for call to function strlen
   \   00000D   7A..         MOV     R2,#wbuf & 0xff
   \   00000F   7B..         MOV     R3,#(wbuf >> 8) & 0xff
   \   000011   12....       LCALL   ??strlen?relay       ; Banked call to: strlen
   \   000014   8A..         MOV     ?V4,R2
   \   000016   8B..         MOV     ?V5,R3
   \   000018   AA..         MOV     R2,?V4
   \   00001A   AB..         MOV     R3,?V5
   \   00001C                ; Setup parameters for call to function sprintf
   \   00001C   78..         MOV     R0,#?V2
   \   00001E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000021   78..         MOV     R0,#?V0
   \   000023   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000026   7C..         MOV     R4,#`?<Constant "%s=%s,">` & 0xff
   \   000028   7D..         MOV     R5,#(`?<Constant "%s=%s,">` >> 8) & 0xff
   \   00002A   74..         MOV     A,#wbuf & 0xff
   \   00002C   2A           ADD     A,R2
   \   00002D   FA           MOV     R2,A
   \   00002E   74..         MOV     A,#(wbuf >> 8) & 0xff
   \   000030   3B           ADDC    A,R3
   \   000031   FB           MOV     R3,A
   \   000032   12....       LCALL   ??sprintf?relay      ; Banked call to: sprintf
   \   000035   7404         MOV     A,#0x4
   \   000037   12....       LCALL   ?DEALLOC_XSTACK8
     55            return strlen(wbuf);
   \   00003A                ; Setup parameters for call to function strlen
   \   00003A   7A..         MOV     R2,#wbuf & 0xff
   \   00003C   7B..         MOV     R3,#(wbuf >> 8) & 0xff
   \   00003E   12....       LCALL   ??strlen?relay       ; Banked call to: strlen
   \   000041   EA           MOV     A,R2
   \   000042   F9           MOV     R1,A
   \   000043   7F06         MOV     R7,#0x6
   \   000045   02....       LJMP    ?BANKED_LEAVE_XDATA
     56          }
     57          /*********************************************************************************************
     58          * 名称：ZXBeeEnd()
     59          * 功能：ZXBee通信协议的数据包添加结束帧“}”,并返回封包后的数据包指针
     60          * 参数：wbuf -- 返回封包后的数据包指针
     61          * 返回：
     62          * 修改：
     63          * 注释：
     64          *********************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     65          char* ZXBeeEnd(void)
   \                     ZXBeeEnd:
     66          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     67            int offset = strlen(wbuf);
   \   000005                ; Setup parameters for call to function strlen
   \   000005   7A..         MOV     R2,#wbuf & 0xff
   \   000007   7B..         MOV     R3,#(wbuf >> 8) & 0xff
   \   000009   12....       LCALL   ??strlen?relay       ; Banked call to: strlen
   \   00000C   8A..         MOV     ?V0,R2
   \   00000E   8B..         MOV     ?V1,R3
   \   000010   A8..         MOV     R0,?V0
   \   000012   A9..         MOV     R1,?V1
     68            wbuf[offset-1] = '}';
   \   000014   74..         MOV     A,#(wbuf + 255) & 0xff
   \   000016   28           ADD     A,R0
   \   000017   F582         MOV     DPL,A
   \   000019   74..         MOV     A,#((wbuf - 1) >> 8) & 0xff
   \   00001B   39           ADDC    A,R1
   \   00001C   F583         MOV     DPH,A
   \   00001E   747D         MOV     A,#0x7d
   \   000020   F0           MOVX    @DPTR,A
     69            wbuf[offset] = '\0';
   \   000021   74..         MOV     A,#wbuf & 0xff
   \   000023   28           ADD     A,R0
   \   000024   F582         MOV     DPL,A
   \   000026   74..         MOV     A,#(wbuf >> 8) & 0xff
   \   000028   39           ADDC    A,R1
   \   000029   F583         MOV     DPH,A
   \   00002B   7400         MOV     A,#0x0
   \   00002D   F0           MOVX    @DPTR,A
     70            if (offset > 2) return wbuf;
   \   00002E   C3           CLR     C
   \   00002F   E8           MOV     A,R0
   \   000030   9403         SUBB    A,#0x3
   \   000032   E9           MOV     A,R1
   \   000033   9400         SUBB    A,#0x0
   \   000035   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000037   65D0         XRL     A,PSW
   \   000039   33           RLC     A
   \   00003A   4006         JC      ??ZXBeeEnd_0
   \   00003C   7A..         MOV     R2,#wbuf & 0xff
   \   00003E   7B..         MOV     R3,#(wbuf >> 8) & 0xff
   \   000040   8004         SJMP    ??ZXBeeEnd_1
     71            return NULL;
   \                     ??ZXBeeEnd_0:
   \   000042   7A00         MOV     R2,#0x0
   \   000044   7B00         MOV     R3,#0x0
   \                     ??ZXBeeEnd_1:
   \   000046   7F02         MOV     R7,#0x2
   \   000048   02....       LJMP    ?BANKED_LEAVE_XDATA
     72          }
     73          /*********************************************************************************************
     74          * 名称：ZXBeeDecodePackage()
     75          * 功能：对接收到的无线数据包进行解包
     76          * 参数：pkg -- 数据   len -- 数据长度
     77          * 返回：p -- 返回的数据包
     78          * 修改：
     79          * 注释：
     80          *********************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     81          char* ZXBeeDecodePackage(char *pkg, int len)
   \                     ZXBeeDecodePackage:
     82          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 4
   \   000005   74FC         MOV     A,#-0x4
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EC           MOV     A,R4
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   ED           MOV     A,R5
   \   000014   F0           MOVX    @DPTR,A
   \   000015   8A..         MOV     ?V0,R2
   \   000017   8B..         MOV     ?V1,R3
     83            char *p;
     84            char *ptag = NULL;
   \   000019   75..00       MOV     ?V2,#0x0
   \   00001C   75..00       MOV     ?V3,#0x0
     85            char *pval = NULL;
   \   00001F   75..00       MOV     ?V6,#0x0
   \   000022   75..00       MOV     ?V7,#0x0
     86          
     87            if (pkg[0] != '{' || pkg[len-1] != '}') return NULL;
   \   000025   85..82       MOV     DPL,?V0
   \   000028   85..83       MOV     DPH,?V1
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   647B         XRL     A,#0x7b
   \   00002E   7022         JNZ     ??ZXBeeDecodePackage_0
   \   000030   85..82       MOV     DPL,?XSP + 0
   \   000033   85..83       MOV     DPH,?XSP + 1
   \   000036   E0           MOVX    A,@DPTR
   \   000037   F8           MOV     R0,A
   \   000038   A3           INC     DPTR
   \   000039   E0           MOVX    A,@DPTR
   \   00003A   F9           MOV     R1,A
   \   00003B   E5..         MOV     A,?V0
   \   00003D   28           ADD     A,R0
   \   00003E   F8           MOV     R0,A
   \   00003F   E5..         MOV     A,?V1
   \   000041   39           ADDC    A,R1
   \   000042   F9           MOV     R1,A
   \   000043   E8           MOV     A,R0
   \   000044   24FF         ADD     A,#-0x1
   \   000046   F582         MOV     DPL,A
   \   000048   E9           MOV     A,R1
   \   000049   34FF         ADDC    A,#-0x1
   \   00004B   F583         MOV     DPH,A
   \   00004D   E0           MOVX    A,@DPTR
   \   00004E   647D         XRL     A,#0x7d
   \   000050   6007         JZ      ??ZXBeeDecodePackage_1
   \                     ??ZXBeeDecodePackage_0:
   \   000052   7A00         MOV     R2,#0x0
   \   000054   7B00         MOV     R3,#0x0
   \   000056   02....       LJMP    ??ZXBeeDecodePackage_2 & 0xFFFF
     88            
     89            ZXBeeBegin();
   \                     ??ZXBeeDecodePackage_1:
   \   000059                ; Setup parameters for call to function ZXBeeBegin
   \   000059   12....       LCALL   ??ZXBeeBegin?relay   ; Banked call to: ZXBeeBegin
   \   00005C   E9           MOV     A,R1
     90          
     91            pkg[len-1] = 0;
   \   00005D   85..82       MOV     DPL,?XSP + 0
   \   000060   85..83       MOV     DPH,?XSP + 1
   \   000063   E0           MOVX    A,@DPTR
   \   000064   F8           MOV     R0,A
   \   000065   A3           INC     DPTR
   \   000066   E0           MOVX    A,@DPTR
   \   000067   F9           MOV     R1,A
   \   000068   E5..         MOV     A,?V0
   \   00006A   28           ADD     A,R0
   \   00006B   F8           MOV     R0,A
   \   00006C   E5..         MOV     A,?V1
   \   00006E   39           ADDC    A,R1
   \   00006F   F9           MOV     R1,A
   \   000070   E8           MOV     A,R0
   \   000071   24FF         ADD     A,#-0x1
   \   000073   F582         MOV     DPL,A
   \   000075   E9           MOV     A,R1
   \   000076   34FF         ADDC    A,#-0x1
   \   000078   F583         MOV     DPH,A
   \   00007A   7400         MOV     A,#0x0
   \   00007C   F0           MOVX    @DPTR,A
     92            p = pkg+1;
   \   00007D   85..82       MOV     DPL,?V0
   \   000080   85..83       MOV     DPH,?V1
   \   000083   A3           INC     DPTR
   \   000084   AE82         MOV     R6,DPL
   \   000086   AF83         MOV     R7,DPH
     93            do {
     94              ptag = p;
   \                     ??ZXBeeDecodePackage_3:
   \   000088   8E..         MOV     ?V2,R6
   \   00008A   8F..         MOV     ?V3,R7
     95              p = strchr(p, '=');
   \   00008C                ; Setup parameters for call to function strchr
   \   00008C   7C3D         MOV     R4,#0x3d
   \   00008E   7D00         MOV     R5,#0x0
   \   000090   EE           MOV     A,R6
   \   000091   FA           MOV     R2,A
   \   000092   EF           MOV     A,R7
   \   000093   FB           MOV     R3,A
   \   000094   12....       LCALL   ??strchr?relay       ; Banked call to: strchr
   \   000097   8A..         MOV     ?V4,R2
   \   000099   8B..         MOV     ?V5,R3
   \   00009B   AE..         MOV     R6,?V4
   \   00009D   AF..         MOV     R7,?V5
     96              if (p != NULL) {
   \   00009F   EE           MOV     A,R6
   \   0000A0   4F           ORL     A,R7
   \   0000A1   6050         JZ      ??ZXBeeDecodePackage_4
     97                *p++ = 0;
   \   0000A3   8E82         MOV     DPL,R6
   \   0000A5   8F83         MOV     DPH,R7
   \   0000A7   7400         MOV     A,#0x0
   \   0000A9   F0           MOVX    @DPTR,A
   \   0000AA   8E82         MOV     DPL,R6
   \   0000AC   8F83         MOV     DPH,R7
   \   0000AE   A3           INC     DPTR
   \   0000AF   AE82         MOV     R6,DPL
   \   0000B1   AF83         MOV     R7,DPH
     98                pval = p;
   \   0000B3   8E..         MOV     ?V6,R6
   \   0000B5   8F..         MOV     ?V7,R7
     99                p = strchr(p, ',');
   \   0000B7                ; Setup parameters for call to function strchr
   \   0000B7   7C2C         MOV     R4,#0x2c
   \   0000B9   7D00         MOV     R5,#0x0
   \   0000BB   EE           MOV     A,R6
   \   0000BC   FA           MOV     R2,A
   \   0000BD   EF           MOV     A,R7
   \   0000BE   FB           MOV     R3,A
   \   0000BF   12....       LCALL   ??strchr?relay       ; Banked call to: strchr
   \   0000C2   8A..         MOV     ?V4,R2
   \   0000C4   8B..         MOV     ?V5,R3
   \   0000C6   AE..         MOV     R6,?V4
   \   0000C8   AF..         MOV     R7,?V5
    100                if (p != NULL) *p++ = 0;
   \   0000CA   EE           MOV     A,R6
   \   0000CB   4F           ORL     A,R7
   \   0000CC   6010         JZ      ??ZXBeeDecodePackage_5
   \   0000CE   8E82         MOV     DPL,R6
   \   0000D0   8F83         MOV     DPH,R7
   \   0000D2   7400         MOV     A,#0x0
   \   0000D4   F0           MOVX    @DPTR,A
   \   0000D5   8E82         MOV     DPL,R6
   \   0000D7   8F83         MOV     DPH,R7
   \   0000D9   A3           INC     DPTR
   \   0000DA   AE82         MOV     R6,DPL
   \   0000DC   AF83         MOV     R7,DPH
    101                int ret;
    102                ret = ZXBeeSysCommandProc(ptag, pval);
   \                     ??ZXBeeDecodePackage_5:
   \   0000DE                ; Setup parameters for call to function ZXBeeSysCommandProc
   \   0000DE   AC..         MOV     R4,?V6
   \   0000E0   AD..         MOV     R5,?V7
   \   0000E2   AA..         MOV     R2,?V2
   \   0000E4   AB..         MOV     R3,?V3
   \   0000E6   12....       LCALL   ??ZXBeeSysCommandProc?relay; Banked call to: ZXBeeSysCommandProc
   \   0000E9   7402         MOV     A,#0x2
   \   0000EB   12....       LCALL   ?XSTACK_DISP0_8
   \   0000EE   EA           MOV     A,R2
   \   0000EF   F0           MOVX    @DPTR,A
   \   0000F0   A3           INC     DPTR
   \   0000F1   EB           MOV     A,R3
   \   0000F2   F0           MOVX    @DPTR,A
    103                if (ret < 0) {
    104          #ifndef CC2530_Serial
    105                          ret = ZXBeeUserProcess(ptag, pval);
    106          #endif
    107                }
    108              }
    109            } while (p != NULL);
   \                     ??ZXBeeDecodePackage_4:
   \   0000F3   EE           MOV     A,R6
   \   0000F4   4F           ORL     A,R7
   \   0000F5   7091         JNZ     ??ZXBeeDecodePackage_3
    110            p = ZXBeeEnd();
   \   0000F7                ; Setup parameters for call to function ZXBeeEnd
   \   0000F7   12....       LCALL   ??ZXBeeEnd?relay     ; Banked call to: ZXBeeEnd
   \   0000FA   8A..         MOV     ?V4,R2
   \   0000FC   8B..         MOV     ?V5,R3
   \   0000FE   AE..         MOV     R6,?V4
   \   000100   AF..         MOV     R7,?V5
    111          
    112            return p;
   \   000102   EE           MOV     A,R6
   \   000103   FA           MOV     R2,A
   \   000104   EF           MOV     A,R7
   \   000105   FB           MOV     R3,A
   \                     ??ZXBeeDecodePackage_2:
   \   000106   7404         MOV     A,#0x4
   \   000108   12....       LCALL   ?DEALLOC_XSTACK8
   \   00010B   7F08         MOV     R7,#0x8
   \   00010D   02....       LJMP    ?BANKED_LEAVE_XDATA
    113          }

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ZXBeeBegin?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZXBeeBegin

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ZXBeeAdd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZXBeeAdd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ZXBeeEnd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZXBeeEnd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ZXBeeDecodePackage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZXBeeDecodePackage

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "%s=%s,">`:
   \   000000   25733D25     DB "%s=%s,"
   \            732C00  

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      0     18   ZXBeeAdd
        0     18   -> sprintf
        0     14   -> strlen
      2     20   ZXBeeBegin
      0     20   ZXBeeDecodePackage
        0     20   -> ZXBeeBegin
        0     20   -> ZXBeeEnd
        0     20   -> ZXBeeSysCommandProc
        0     20   -> strchr
      0     30   ZXBeeEnd
        0     10   -> strlen


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       7  ?<Constant "%s=%s,">
       6  ??ZXBeeAdd?relay
       6  ??ZXBeeBegin?relay
       6  ??ZXBeeDecodePackage?relay
       6  ??ZXBeeEnd?relay
      72  ZXBeeAdd
      25  ZXBeeBegin
     272  ZXBeeDecodePackage
      75  ZXBeeEnd
      96  wbuf

 
 444 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   7 bytes in segment XDATA_ROM_C
  96 bytes in segment XDATA_Z
 
 468 bytes of CODE  memory
   7 bytes of CONST memory
  96 bytes of XDATA memory

Errors: none
Warnings: none
