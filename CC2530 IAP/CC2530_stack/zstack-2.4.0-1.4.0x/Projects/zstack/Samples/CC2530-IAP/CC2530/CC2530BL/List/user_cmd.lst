###############################################################################
#
# IAR C/C++ Compiler V9.10.1.2146 for 8051                07/Jul/2023  16:40:19
# Copyright 2004-2014 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  near
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\Source\shell\user_cmd.c
#    Command line       =  
#        "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\Source\shell\user_cmd.c"
#        -D HAL_SB_BOOT_CODE -D HAL_UART=TRUE -D HAL_UART_DMA=0 -D
#        HAL_UART_ISR=1 -D HAL_UART_ISR_RX_MAX=254 -lC
#        "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\CC2530BL\List\"
#        -lA "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\CC2530BL\List\"
#        --diag_suppress Pe001,Pa010,Pa050 -o "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\CC2530BL\Obj\"
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=near --calling_convention=xdata_reentrant
#        --place_constants=data --nr_virtual_regs 8 -I
#        "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\Source\drive\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\Source\iap\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\Source\shell\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\Source\sys\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\Source\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\source\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\..\common\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\..\..\ZMain\TI2530DB\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\..\..\..\..\Components\hal\include\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\..\..\..\..\Components\hal\target\_COMMON\CC2530\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\..\..\..\..\Components\osal\include\"
#        -I "I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\..\..\..\..\..\Components\services\saddr\"
#        -Ohz
#    List file          =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\CC2530BL\List\user_cmd.lst
#    Object file        =  
#        I:\1_git_code\EPnode_OTA\CC2530
#        IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\CC2530\CC2530BL\Obj\user_cmd.r51
#
###############################################################################

I:\1_git_code\EPnode_OTA\CC2530 IAP\CC2530_stack\zstack-2.4.0-1.4.0x\Projects\zstack\Samples\CC2530-IAP\Source\shell\user_cmd.c
      1          #include "user_cmd.h"

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc9
   \   unsigned char volatile __sfr WDCTL
   \                     WDCTL:
   \   000000                DS 1
      2          #include "shell.h"
      3          #include "uart.h"
      4          #include "iap_config.h"
      5          #include "sys.h"
      6          #include "hal_flash.h"
      7          #include "download.h"
      8          

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
      9          void SoftReset(void* arg)
   \                     SoftReset:
     10          { 
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     11            (void)arg;
     12            HAL_SYSTEM_RESET();
   \   000000   C2AF         CLR     0xa8.7
   \   000002   75C9AB       MOV     0xc9,#-0x55
   \   000005   75C95B       MOV     0xc9,#0x5b
   \                     ??SoftReset_0:
   \   000008   80FE         SJMP    ??SoftReset_0
   \   00000A                REQUIRE _A_IEN0
   \   00000A                REQUIRE WDCTL
     13          }
     14          
     15          // Æô¶¯ IAP Ä£Ê½

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     16          void __IAP(void * arg)
   \                     __IAP:
     17          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 4
   \   000005   74FC         MOV     A,#-0x4
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
     18            char * argv[2];
     19            int argc =cmdline_strtok((char*)arg,argv,2);
     20            if(argc<2){
   \   00000A                ; Setup parameters for call to function cmdline_strtok
   \   00000A   75..02       MOV     ?V0,#0x2
   \   00000D   75..00       MOV     ?V1,#0x0
   \   000010   78..         MOV     R0,#?V0
   \   000012   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000015   7402         MOV     A,#0x2
   \   000017   12....       LCALL   ?XSTACK_DISP102_8
   \   00001A   12....       LCALL   cmdline_strtok
   \   00001D   7402         MOV     A,#0x2
   \   00001F   12....       LCALL   ?DEALLOC_XSTACK8
   \   000022   C3           CLR     C
   \   000023   EA           MOV     A,R2
   \   000024   9402         SUBB    A,#0x2
   \   000026   EB           MOV     A,R3
   \   000027   9400         SUBB    A,#0x0
   \   000029   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00002B   65D0         XRL     A,PSW
   \   00002D   33           RLC     A
   \   00002E   404D         JC      ??__IAP_0
     21              debug_info(INFO"please input %s [<update> or <exit>] \r\n",IAP_CMD);
   \   000030                ; Setup parameters for call to function printf
     22              return;
     23            }
     24            if(strstr(argv[1],"update")){
   \   000030   7402         MOV     A,#0x2
   \   000032   12....       LCALL   ?XSTACK_DISP0_8
   \   000035   E0           MOVX    A,@DPTR
   \   000036   F8           MOV     R0,A
   \   000037   A3           INC     DPTR
   \   000038   E0           MOVX    A,@DPTR
   \   000039   F9           MOV     R1,A
   \   00003A   8882         MOV     DPL,R0
   \   00003C   8983         MOV     DPH,R1
   \   00003E                ; Setup parameters for call to function strstr
   \   00003E   7C..         MOV     R4,#`?<Constant "update">` & 0xff
   \   000040   7D..         MOV     R5,#(`?<Constant "update">` >> 8) & 0xff
   \   000042   AA82         MOV     R2,DPL
   \   000044   AB83         MOV     R3,DPH
   \   000046   12....       LCALL   strstr
   \   000049   8B..         MOV     ?V1,R3
   \   00004B   EA           MOV     A,R2
   \   00004C   45..         ORL     A,?V1
   \   00004E   6008         JZ      ??__IAP_1
     25              usart0_mode=1;
   \   000050   90....       MOV     DPTR,#usart0_mode
   \   000053   7401         MOV     A,#0x1
   \   000055   F0           MOVX    @DPTR,A
   \   000056   803C         SJMP    ??__IAP_2
     26            }else if(strstr(argv[1],"exit")){
   \                     ??__IAP_1:
   \   000058                ; Setup parameters for call to function strstr
   \   000058   7C..         MOV     R4,#`?<Constant "exit">` & 0xff
   \   00005A   7D..         MOV     R5,#(`?<Constant "exit">` >> 8) & 0xff
   \   00005C   AA82         MOV     R2,DPL
   \   00005E   AB83         MOV     R3,DPH
   \   000060   12....       LCALL   strstr
   \   000063   8B..         MOV     ?V1,R3
   \   000065   EA           MOV     A,R2
   \   000066   45..         ORL     A,?V1
   \   000068   6013         JZ      ??__IAP_0
     27              sys_parameter.current_part=1;
   \   00006A   90....       MOV     DPTR,#sys_parameter
   \   00006D   7401         MOV     A,#0x1
   \   00006F   F0           MOVX    @DPTR,A
     28              write_sys_parameter(); 
   \   000070                ; Setup parameters for call to function write_sys_parameter
   \   000070   12....       LCALL   write_sys_parameter
     29              HAL_SYSTEM_RESET();
   \   000073   C2AF         CLR     0xa8.7
   \   000075   75C9AB       MOV     0xc9,#-0x55
   \   000078   75C95B       MOV     0xc9,#0x5b
   \                     ??__IAP_3:
   \   00007B   80FE         SJMP    ??__IAP_3
     30            }else{
     31              debug_info(INFO"please input %s [<update> or <exit>] \r\n",IAP_CMD);
   \                     ??__IAP_0:
   \   00007D                ; Setup parameters for call to function printf
   \   00007D   75....       MOV     ?V0,#`?<Constant "IAP">` & 0xff
   \   000080   75....       MOV     ?V1,#(`?<Constant "IAP">` >> 8) & 0xff
   \   000083   78..         MOV     R0,#?V0
   \   000085   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000088   7A..         MOV     R2,#`?<Constant "INFORMATION:please in...">` & 0xff
   \   00008A   7B..         MOV     R3,#(`?<Constant "INFORMATION:please in...">` >> 8) & 0xff
   \   00008C   12....       LCALL   printf
   \   00008F   7402         MOV     A,#0x2
   \   000091   12....       LCALL   ?DEALLOC_XSTACK8
     32            }
     33          }
   \                     ??__IAP_2:
   \   000094   7404         MOV     A,#0x4
   \   000096                REQUIRE ?Subroutine0
   \   000096                REQUIRE _A_IEN0
   \   000096                REQUIRE WDCTL
   \   000096                ; // Fall through to label ?Subroutine0

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003   7F02         MOV     R7,#0x2
   \   000005   02....       LJMP    ?FUNC_LEAVE_XDATA
     34          
     35          // È·ÈÏ½øÈëIAP

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     36          void iap_mode_confirm(void * arg){
   \                     iap_mode_confirm:
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     37            printf("OK\r\n");
   \   000000                ; Setup parameters for call to function printf
   \   000000   7A..         MOV     R2,#`?<Constant "OK\\r\\n">` & 0xff
   \   000002   7B..         MOV     R3,#(`?<Constant "OK\\r\\n">` >> 8) & 0xff
   \   000004   02....       LJMP    printf
     38          }
     39          
     40          // ÓÃ»§ÃüÁî×¢²á

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     41          void register_user_cmd()
   \                     register_user_cmd:
     42          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?FUNC_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     43            shell_register_command("reboot",SoftReset);
   \   000005                ; Setup parameters for call to function _shell_register
   \   000005   75....       MOV     ?V0,#SoftReset & 0xff
   \   000008   75....       MOV     ?V1,#(SoftReset >> 8) & 0xff
   \   00000B   78..         MOV     R0,#?V0
   \   00000D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000010   7C..         MOV     R4,#`?<Constant "reboot">` & 0xff
   \   000012   7D..         MOV     R5,#(`?<Constant "reboot">` >> 8) & 0xff
   \   000014   7A..         MOV     R2,#??newcmd & 0xff
   \   000016   7B..         MOV     R3,#(??newcmd >> 8) & 0xff
   \   000018   12....       LCALL   _shell_register
   \   00001B   7402         MOV     A,#0x2
   \   00001D   12....       LCALL   ?DEALLOC_XSTACK8
     44            shell_register_command(IAP_CMD,__IAP);
   \   000020                ; Setup parameters for call to function _shell_register
   \   000020   75....       MOV     ?V0,#__IAP & 0xff
   \   000023   75....       MOV     ?V1,#(__IAP >> 8) & 0xff
   \   000026   78..         MOV     R0,#?V0
   \   000028   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00002B   7C..         MOV     R4,#`?<Constant "IAP">` & 0xff
   \   00002D   7D..         MOV     R5,#(`?<Constant "IAP">` >> 8) & 0xff
   \   00002F   7A..         MOV     R2,#??newcmd_1 & 0xff
   \   000031   7B..         MOV     R3,#(??newcmd_1 >> 8) & 0xff
   \   000033   12....       LCALL   _shell_register
   \   000036   7402         MOV     A,#0x2
   \   000038   12....       LCALL   ?DEALLOC_XSTACK8
     45            shell_register_command("AT+IAP=IAP",iap_mode_confirm);
   \   00003B                ; Setup parameters for call to function _shell_register
   \   00003B   75....       MOV     ?V0,#iap_mode_confirm & 0xff
   \   00003E   75....       MOV     ?V1,#(iap_mode_confirm >> 8) & 0xff
   \   000041   78..         MOV     R0,#?V0
   \   000043   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000046   7C..         MOV     R4,#`?<Constant "AT+IAP=IAP">` & 0xff
   \   000048   7D..         MOV     R5,#(`?<Constant "AT+IAP=IAP">` >> 8) & 0xff
   \   00004A   7A..         MOV     R2,#??newcmd_2 & 0xff
   \   00004C   7B..         MOV     R3,#(??newcmd_2 >> 8) & 0xff
   \   00004E   12....       LCALL   _shell_register
   \   000051   7402         MOV     A,#0x2
   \   000053   80..         SJMP    ?Subroutine0
     46          }

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??newcmd:
   \   000000                DS 10
   \   00000A                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??newcmd_1:
   \   000000                DS 10
   \   00000A                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??newcmd_2:
   \   000000                DS 10
   \   00000A                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "INFORMATION:pleas`:
   \   000000   494E464F     DB 49H, 4EH, 46H, 4FH, 52H, 4DH, 41H, 54H
   \            524D4154
   \   000008   494F4E3A     DB 49H, 4FH, 4EH, 3AH, 70H, 6CH, 65H, 61H
   \            706C6561
   \   000010   73652069     DB 73H, 65H, 20H, 69H, 6EH, 70H, 75H, 74H
   \            6E707574
   \   000018   20257320     DB 20H, 25H, 73H, 20H, 5BH, 3CH, 75H, 70H
   \            5B3C7570
   \   000020   64617465     DB 64H, 61H, 74H, 65H, 3EH, 20H, 6FH, 72H
   \            3E206F72
   \   000028   203C6578     DB 20H, 3CH, 65H, 78H, 69H, 74H, 3EH, 5DH
   \            69743E5D
   \   000030   200D0A00     DB 20H, 0DH, 0AH, 0

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "IAP">>`:
   \   000000   49415000     DB "IAP"

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "update">>`:
   \   000000   75706461     DB "update"
   \            746500  

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "exit">>`:
   \   000000   65786974     DB "exit"
   \            00      

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "OK\\r\\n">>`:
   \   000000   4F4B0D0A     DB "OK\015\012"
   \            00      

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "reboot">>`:
   \   000000   7265626F     DB "reboot"
   \            6F7400  

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "AT+IAP=IAP">>`:
   \   000000   41542B49     DB "AT+IAP=IAP"
   \            41503D49
   \            415000  

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \                     `?<Constant "INFORMATION:please in...">`:
   \   000000                DS 52
   \   000034                REQUIRE `?<Initializer for <Constant "INFORMATION:pleas`
   \   000034                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \                     `?<Constant "IAP">`:
   \   000000                DS 4
   \   000004                REQUIRE `?<Initializer for <Constant "IAP">>`
   \   000004                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \                     `?<Constant "update">`:
   \   000000                DS 7
   \   000007                REQUIRE `?<Initializer for <Constant "update">>`
   \   000007                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \                     `?<Constant "exit">`:
   \   000000                DS 5
   \   000005                REQUIRE `?<Initializer for <Constant "exit">>`
   \   000005                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \                     `?<Constant "OK\\r\\n">`:
   \   000000                DS 5
   \   000005                REQUIRE `?<Initializer for <Constant "OK\\r\\n">>`
   \   000005                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \                     `?<Constant "reboot">`:
   \   000000                DS 7
   \   000007                REQUIRE `?<Initializer for <Constant "reboot">>`
   \   000007                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \                     `?<Constant "AT+IAP=IAP">`:
   \   000000                DS 11
   \   00000B                REQUIRE `?<Initializer for <Constant "AT+IAP=IAP">>`
   \   00000B                REQUIRE __INIT_XDATA_I

   Maximum stack usage in bytes:

   XSTACK Function
   ------ --------
      0   SoftReset
     15   __IAP
       15   -> cmdline_strtok
       15   -> printf
       13   -> strstr
       13   -> write_sys_parameter
      0   iap_mode_confirm
        0   -> printf
     11   register_user_cmd
       11   -> _shell_register


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      11  ?<Constant "AT+IAP=IAP">
       4  ?<Constant "IAP">
      52  ?<Constant "INFORMATION:please in...">
       5  ?<Constant "OK\r\n">
       5  ?<Constant "exit">
       7  ?<Constant "reboot">
       7  ?<Constant "update">
      11  ?<Initializer for <Constant "AT+IAP=IAP">>
       4  ?<Initializer for <Constant "IAP">>
      52  ?<Initializer for <Constant "INFORMATION:pleas
       5  ?<Initializer for <Constant "OK\r\n">>
       5  ?<Initializer for <Constant "exit">>
       7  ?<Initializer for <Constant "reboot">>
       7  ?<Initializer for <Constant "update">>
       8  ?Subroutine0
      10  SoftReset
       1  WDCTL
       1  _A_IEN0
     150  __IAP
       7  iap_mode_confirm
      10  newcmd
      10  newcmd
      10  newcmd
      85  register_user_cmd

 
 260 bytes in segment NEAR_CODE
   2 bytes in segment SFR_AN
  91 bytes in segment XDATA_I
  91 bytes in segment XDATA_ID
  30 bytes in segment XDATA_Z
 
 351 bytes of CODE  memory
   0 bytes of DATA  memory (+ 2 bytes shared)
 121 bytes of XDATA memory

Errors: none
Warnings: none
